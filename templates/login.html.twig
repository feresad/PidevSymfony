{% extends 'base.html.twig' %}

{% block title %}Connexion{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('css/login.css') }}">
	<style>
		.btn-register {
			background-color: #4CAF50;
			color: white;
			padding: 10px 20px;
			border: none;
			border-radius: 4px;
			cursor: pointer;
			font-size: 16px;
			transition: background-color 0.3s ease;
		}

		.btn-register:hover {
			background-color: #45a049;
		}

		.login-footer {
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 15px;
			margin-top: 20px;
		}

		.buttons-container {
			width: 100%;
		}

		.forgot-password {
			margin-top: 5px;
		}

		.forgot-password a {
			color: #94a3b8;
			text-decoration: none;
			font-size: 0.9rem;
			transition: color 0.2s;
		}

		.forgot-password a:hover {
			color: #6366f1;
		}
	</style>
{% endblock %}

{% block body %}
<div class="login-page">
	<div class="login-container">
		<h2 class="login-title">Connexion</h2>
		<p class="login-subtitle">Commencez maintenant !</p>
		{% if userId %}
			<p style="color: green;">[DEBUG] User ID: {{ userId }}</p>
		{% endif %}

		{% if error %}
			<div class="alert alert-danger">
				{{ error.messageKey|trans(error.messageData, 'security') }}
			</div>
		{% endif %}

		{{ form_start(form, {'attr': {'id': 'loginForm', 'onsubmit': 'return validateForm(event)'}}) }}
			<div class="form-group">
				{{ form_label(form.email) }}
				{{ form_widget(form.email, {
					'attr': {
						'class': 'form-control',
						'value': last_username,
						
					}
				}) }}
				<div class="error-message" id="email-error">
					{{ form_errors(form.email) }}
				</div>
			</div>

			<div class="form-group">
				{{ form_label(form.password) }}
				{{ form_widget(form.password, {
					'attr': {
						'class': 'form-control',
						'required': true
					}
				}) }}
				<div class="error-message" id="password-error">
					{{ form_errors(form.password) }}
				</div>
			</div>

			<div class="remember-me">
				{{ form_widget(form.remember_me) }}
				{{ form_label(form.remember_me) }}
			</div>

			<button type="submit" class="btn-login">Se connecter</button>

			<div class="login-footer">
				<div class="buttons-container">
					<button onclick="window.location.href='{{ path('app_register') }}'" class="btn-login">
						Crée un compte
					</button>
				</div>
				<div class="forgot-password">
					<a href="{{ path('app_forgot_password') }}">Mot de passe oublié ?</a>
				</div>
			</div>
		{{ form_end(form) }}
	</div>
</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script src="{{ asset('js/userUtils.js') }}"></script>
	<script>
	function validateForm(event) {
		event.preventDefault();
		const form = event.target;
		const email = form.email.value;
		const password = form.password.value;
		let isValid = true;

		// Clear previous errors
		document.getElementById('email-error').textContent = '';
		document.getElementById('password-error').textContent = '';

		// Validate email
		if (!email) {
			document.getElementById('email-error').textContent = 'Veuillez entrer votre email';
			isValid = false;
		} else if (!isValidEmail(email)) {
			document.getElementById('email-error').textContent = 'Veuillez entrer une adresse email valide';
			isValid = false;
		}

		// Validate password
		if (!password) {
			document.getElementById('password-error').textContent = 'Veuillez entrer votre mot de passe';
			isValid = false;
		} else if (password.length < 6) {
			document.getElementById('password-error').textContent = 'Le mot de passe doit contenir au moins 6 caractères';
			isValid = false;
		}

		if (!isValid) {
			// Focus on the first error field
			if (!email) {
				form.email.focus();
			} else if (!password) {
				form.password.focus();
			}
			return false;
		}

		// Submit form if validation passes
		fetch('{{ path("app_login") }}', {
			method: 'POST',
			body: new FormData(form),
			headers: {
				'X-Requested-With': 'XMLHttpRequest'
			}
		})
		.then(response => {
			if (!response.ok) {
				return response.json().then(err => { throw err; });
			}
			return response.json();
		})
		.then(data => {
			localStorage.setItem('userId', data.id);
			localStorage.setItem('userEmail', data.email);
			localStorage.setItem('userRole', data.role);
			window.location.href = '{{ path("app_home") }}';
		})
		.catch(error => {
			const errorDiv = document.createElement('div');
			errorDiv.className = 'alert alert-danger';
			errorDiv.textContent = error.error || 'Une erreur est survenue lors de la connexion';
			
			const existingError = document.querySelector('.alert-danger');
			if (existingError) {
				existingError.replaceWith(errorDiv);
			} else {
				document.querySelector('.login-container').insertBefore(errorDiv, document.querySelector('form'));
			}
		});

		return false;
	}

	function isValidEmail(email) {
		const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
		return re.test(email);
	}
	</script>
	<script>
	const userId = {{ userId|json_encode|raw }};
	console.log("User ID from Twig:", userId);
	</script>
{% endblock %}
