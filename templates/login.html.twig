{% extends 'base.html.twig' %}

{% block title %}Connexion{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('css/login.css') }}">
{% endblock %}

{% block body %}
	<div class="login-page">
		<div class="left-section">
			<div class="welcome-text">Bienvenue !</div>
		</div>
		
		<div class="right-section">
			<h1 class="connexion-title">CONNEXION</h1>
			<p class="subtitle">Commencez maintenant !</p>

			<div id="global-error-message" class="global-error-message"></div>

			{% if app.user and app.user.isBanned() %}
				<div class="alert-ban">
					<div class="ban-title">Compte Banni</div>
					<div class="ban-message">{{ app.user.getBanMessage() }}</div>
				</div>
				<script>
					localStorage.clear();
					setTimeout(() => {
						window.location.href = "{{ path('app_logout') }}";
					}, 5000);
				</script>
			{% else %}
				{{ form_start(form, {'attr': {'id': 'loginForm', 'onsubmit': 'return validateForm(event)'}}) }}
					<div class="form-group">
						{{ form_widget(form.email, {
							'attr': {
								'class': 'form-control',
								'placeholder': 'Email',
								'value': last_username
							}
						}) }}
					</div>

					<div class="form-group">
						{{ form_widget(form.password, {
							'attr': {
								'class': 'form-control',
								'placeholder': 'Mot de passe'
							}
						}) }}
					</div>

					<div class="remember-me">
						{{ form_widget(form.remember_me) }}
						{{ form_label(form.remember_me) }}
					</div>

					<button type="submit" class="btn-connect">Se connecter</button>

					<a href="{{ path('connect_google') }}" class="btn-google">
						<img src="https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg" alt="Google" class="google-icon">
						Continuer avec Google
					</a>

					<a href="{{ path('app_register') }}" class="btn-create">
						Créer un compte
					</a>

					<div class="forgot-password">
						<a href="{{ path('app_forgot_password') }}">Mot de passe oublié ?</a>
					</div>
				{{ form_end(form) }}
			{% endif %}
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script src="{{ asset('js/userUtils.js') }}"></script>
	<script src="https://accounts.google.com/gsi/client" async defer></script>
	<script>
		function showError(message) {
			const errorDiv = document.getElementById('global-error-message');
			errorDiv.textContent = message;
			errorDiv.style.display = 'block';
			setTimeout(() => {
				errorDiv.style.display = 'none';
			}, 5000);
		}

		async function validateForm(event) {
			event.preventDefault();
			const form = event.target;
			const email = form.email.value;
			const password = form.password.value;
			let isValid = true;

			// Clear previous errors
			document.getElementById('global-error-message').textContent = '';

			// Validate email
			if (!email) {
				showError('Veuillez entrer votre email');
				isValid = false;
			} else if (!isValidEmail(email)) {
				showError('Veuillez entrer une adresse email valide');
				isValid = false;
			}

			// Validate password
			if (!password) {
				showError('Veuillez entrer votre mot de passe');
				isValid = false;
			}

			if (!isValid) {
				return false;
			}

			try {
				const response = await fetch('{{ path("app_login") }}', {
					method: 'POST',
					body: new FormData(form),
					headers: {
						'X-Requested-With': 'XMLHttpRequest'
					}
				});

				const data = await response.json();

				if (!response.ok) {
					if (data.error === 'Compte banni') {
						showError('Votre compte a été banni : ' + data.banMessage);
						form.classList.add('disabled-form');
					} else if (data.error === 'Invalid credentials' || data.error === 'Email ou mot de passe incorrect') {
						showError('Email ou mot de passe incorrect');
					} else if (data.error === 'Invalid CSRF token') {
						showError('Session expirée, veuillez rafraîchir la page');
					} else if (data.error === 'Veuillez remplir tous les champs') {
						showError('Veuillez remplir tous les champs');
					} else {
						showError('Email ou mot de passe incorrect');
					}
					return false;
				}

				localStorage.setItem('userId', data.id);
				localStorage.setItem('userEmail', data.email);
				localStorage.setItem('userRole', data.role);
				window.location.href = '{{ path("app_home") }}';
			} catch (error) {
				showError('Email ou mot de passe incorrect');
				return false;
			}
		}

		function isValidEmail(email) {
			const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
			return re.test(email);
		}
	</script>
{% endblock %}
