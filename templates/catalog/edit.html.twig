{% extends 'baseadmin.html.twig' %}

{% block title %}Modifier le produit : {{ product.produit.nomProduit }}{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1 class="mb-4">Modifier le produit : {{ product.produit.nomProduit }}</h1>

        {% for message in app.flashes('success') %}
            <div class="alert alert-success">{{ message }}</div>
        {% endfor %}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
        {% endfor %}

        {# Stock Form #}
        {{ form_start(stock_form, {'attr': {'class': 'needs-validation'}}) }}
            {{ form_errors(stock_form) }}

            <div class="mb-3">
                {{ form_label(stock_form.quantity, 'Quantité', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(stock_form.quantity, {'attr': {
                    'class': 'form-control',
                    'type': 'number',
                    'min': '0',
                    'step': '1'
                }}) }}
                <div class="invalid-feedback">
                    Veuillez entrer un nombre entier positif
                </div>
            </div>

            <div class="mb-3">
                {{ form_label(stock_form.prix_produit, 'Prix', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(stock_form.prix_produit, {'attr': {
                    'class': 'form-control',
                    'type': 'number',
                    'min': '0.01',
                    'step': '0.01'
                }}) }}
                <div class="invalid-feedback">
                    Veuillez entrer un prix valide (nombre positif)
                </div>
            </div>

            <div class="mb-3">
                {{ form_label(stock_form.fichierImage, 'Image (laisser vide pour conserver l\'actuelle)', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(stock_form.fichierImage, {'attr': {
                    'class': 'form-control',
                    'accept': 'image/jpeg,image/png,image/gif',
                    'onchange': 'previewImage(this)'
                }}) }}
                <div class="invalid-feedback">
                    {{ form_errors(stock_form.fichierImage) }}
                </div>
                {% if product.image %}
                    <p class="mt-2">Image actuelle :</p>
                    <img src="{{ image_base_url ~ product.image }}" alt="{{ product.produit.nomProduit }}" style="max-width: 200px;">
                {% endif %}
                <div class="mt-2">
                    <img id="imagePreview" src="#" alt="Aperçu de l'image" style="max-width: 200px; max-height: 200px; display: none;">
                </div>
            </div>

            <div class="d-flex justify-content-center gap-2 mt-3">
                <button type="submit" class="btn btn-primary">Enregistrer les modifications</button>
            </div>
        {{ form_end(stock_form) }}

        {# Produit Form #}
        {{ form_start(produit_form, {'attr': {'class': 'needs-validation mt-4'}}) }}
            {{ form_errors(produit_form) }}

            <div class="mb-3">
                {{ form_label(produit_form.nom_produit, 'Nom du produit', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(produit_form.nom_produit, {'attr': {
                    'class': 'form-control',
                    'maxlength': '255'
                }}) }}
                <div class="invalid-feedback">
                    {{ form_errors(produit_form.nom_produit) }}
                </div>
            </div>

            <div class="mb-3">
                {{ form_label(produit_form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(produit_form.description, {'attr': {
                    'class': 'form-control',
                    'rows': '5'
                }}) }}
                <div class="invalid-feedback">
                    {{ form_errors(produit_form.description) }}
                </div>
            </div>

            <div class="mb-3">
                {{ form_label(produit_form.platform, 'Plateforme', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(produit_form.platform, {'attr': {
                    'class': 'form-control'
                }}) }}
                <div class="invalid-feedback">
                    {{ form_errors(produit_form.platform) }}
                </div>
            </div>

            <div class="mb-3">
                {{ form_label(produit_form.type, 'Type', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(produit_form.type, {'attr': {
                    'class': 'form-control'
                }}) }}
                <div class="invalid-feedback">
                    {{ form_errors(produit_form.type) }}
                </div>
            </div>

            <div class="mb-3">
                {{ form_label(produit_form.region, 'Région', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(produit_form.region, {'attr': {
                    'class': 'form-control'
                }}) }}
                <div class="invalid-feedback">
                    {{ form_errors(produit_form.region) }}
                </div>
            </div>

            <div class="d-flex justify-content-center gap-2 mt-3">
                <button type="submit" class="btn btn-primary">Enregistrer les modifications</button>
                <a href="{{ path('app_catalog_index') }}" class="btn btn-secondary">Retour à la liste</a>
            </div>
        {{ form_end(produit_form) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Image preview functionality
        function previewImage(input) {
            const preview = document.getElementById('imagePreview');
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '#';
                preview.style.display = 'none';
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const imageInput = document.querySelector('input[type="file"]');
            if (imageInput) {
                imageInput.addEventListener('change', function() {
                    previewImage(this);
                });
            }
        });
    </script>
{% endblock %}