{% extends 'baseadmin.html.twig' %}

{% block title %}Statistiques des Commandes{% endblock %}

{% block body %}
    <div class="cyber-container">
        <div class="cyber-header">
            <h1 class="cyber-title">Tableau de bord des statistiques de commandes</h1>
            <div class="cyber-controls">
                <div class="cyber-period">
                    <span class="cyber-label">Période :</span>
                    <form action="{{ path('app_commande_stats') }}" method="get" id="statFilterForm">
                        <select name="year" class="cyber-select" onchange="this.form.submit()">
                            {% for y in range(2023, "now"|date("Y")) %}
                                <option value="{{ y }}" {{ year|default("now"|date("Y")) == y ? 'selected' : '' }}>{{ y }}</option>
                            {% endfor %}
                        </select>
                    </form>
                </div>
                <div class="cyber-export">
                    <a href="{{ path('app_commande_stats_pdf', {'year': year|default("now"|date("Y"))}) }}" class="cyber-button">
                        <i class="fas fa-file-pdf"></i> EXPORTER PDF
                    </a>
                </div>
            </div>
        </div>

        <div class="cyber-stats-grid">
            <!-- Revenue Card -->
            <div class="cyber-stats-card">
                <div class="cyber-stats-icon">
                    <i class="fas fa-money-bill-wave"></i>
                </div>
                <div class="cyber-stats-content">
                    <div class="cyber-stats-value">{{ total_revenue|number_format(2, '.', ',') }} TND</div>
                    <div class="cyber-stats-label">Revenu Total</div>
                </div>
            </div>

            <!-- Orders Card -->
            <div class="cyber-stats-card">
                <div class="cyber-stats-icon">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <div class="cyber-stats-content">
                    <div class="cyber-stats-value">{{ total_orders }}</div>
                    <div class="cyber-stats-label">Total des commandes</div>
                </div>
            </div>

            <!-- Average Order Value Card -->
            <div class="cyber-stats-card">
                <div class="cyber-stats-icon">
                    <i class="fas fa-calculator"></i>
                </div>
                <div class="cyber-stats-content">
                    <div class="cyber-stats-value">{{ total_orders > 0 ? (total_revenue / total_orders)|number_format(2, '.', ',') : '0.00' }} TND</div>
                    <div class="cyber-stats-label">Panier moyen</div>
                </div>
            </div>

            <!-- Top Product Card -->
            <div class="cyber-stats-card">
                <div class="cyber-stats-icon">
                    <i class="fas fa-trophy"></i>
                </div>
                <div class="cyber-stats-content">
                    <div class="cyber-stats-value">{{ top_products[0].name|default('-') }}</div>
                    <div class="cyber-stats-label">Produit le plus vendu</div>
                </div>
            </div>
        </div>

        <!-- Revenue by Month Chart -->
        <div class="cyber-panel">
            <div class="cyber-panel-header">
                <h2 class="cyber-panel-title">Évolution des revenus mensuels</h2>
            </div>
            <div class="cyber-panel-body">
                <canvas id="revenueChart" width="400" height="200"
                    data-labels="{{ monthly_data|map(month => month.month_name)|json_encode() }}"
                    data-values="{{ monthly_data|map(month => month.revenue)|json_encode() }}">
                </canvas>
            </div>
        </div>
        
        <div class="cyber-grid">
            <!-- Top Products Table -->
            <div class="cyber-panel">
                <div class="cyber-panel-header">
                    <h2 class="cyber-panel-title">Top produits les plus vendus</h2>
                </div>
                <div class="cyber-panel-body">
                    <div class="cyber-table-container">
                        <table class="cyber-table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Produit</th>
                                    <th>Quantité</th>
                                    <th>Revenu</th>
                                    <th>Prix Moyen</th>
                                </tr>
                            </thead>
                            <tbody>
                            {% for product in top_products %}
                                <tr>
                                    <td>{{ loop.index }}</td>
                                    <td>{{ product.name }}</td>
                                    <td>{{ product.quantity }}</td>
                                    <td>{{ product.revenue|number_format(2, '.', ',') }} TND</td>
                                    <td>{{ product.avg_price|number_format(2, '.', ',') }} TND</td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="5" class="text-center">Aucun produit vendu</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            
            <!-- Product Distribution Chart -->
            <div class="cyber-panel">
                <div class="cyber-panel-header">
                    <h2 class="cyber-panel-title">Distribution des ventes par produit</h2>
                </div>
                <div class="cyber-panel-body">
                    <div class="cyber-chart-container">
                        <canvas id="productChart" width="200" height="200"
                            data-labels="{{ top_products|map(product => product.name)|json_encode() }}"
                            data-values="{{ top_products|map(product => product.quantity)|json_encode() }}">
                        </canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&display=swap">
    <style>
        /* Cyberpunk Theme Variables */
        :root {
            --cyber-bg-dark: #091221;
            --cyber-bg-darker: #060d19;
            --cyber-accent: #fe0369;
            --cyber-accent-glow: rgba(254, 3, 105, 0.5);
            --cyber-blue: #0585c6;
            --cyber-blue-glow: rgba(5, 133, 198, 0.5);
            --cyber-green: #10b981;
            --cyber-border: #0236a5;
            --cyber-text: #ffffff;
            --cyber-text-secondary: #8a9cb3;
            --cyber-panel-bg: rgba(9, 18, 33, 0.9);
            --cyber-card-bg: rgba(9, 18, 33, 0.9);
            --cyber-gradient: linear-gradient(45deg, transparent, rgba(254, 3, 105, 0.1), transparent);
            --cyber-shadow: 0 0 15px rgba(5, 133, 198, 0.3);
            --cyber-transition: all 0.3s ease;
        }

        /* Reset & Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: var(--cyber-bg-dark);
            color: var(--cyber-text);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            line-height: 1.5;
            -webkit-font-smoothing: antialiased;
            position: relative;
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Neon Cyberpunk Background */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 15% 15%, rgba(254, 3, 105, 0.2), transparent 25%),
                radial-gradient(circle at 85% 85%, rgba(5, 133, 198, 0.2), transparent 25%),
                radial-gradient(circle at 85% 15%, rgba(16, 185, 129, 0.05), transparent 25%),
                radial-gradient(circle at 15% 85%, rgba(254, 3, 105, 0.05), transparent 25%),
                radial-gradient(circle at 50% 50%, var(--cyber-bg-darker), var(--cyber-bg-dark) 100%);
            z-index: -1;
        }

        /* Animated Grid Lines */
        body::after {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                linear-gradient(to right, rgba(5, 133, 198, 0.05) 1px, transparent 1px),
                linear-gradient(to bottom, rgba(5, 133, 198, 0.05) 1px, transparent 1px);
            background-size: 40px 40px;
            background-repeat: repeat;
            z-index: -1;
            opacity: 0.5;
        }

        /* Cyberpunk Container */
        .cyber-container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        /* Header Section */
        .cyber-header {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding: 1rem;
            background: var(--cyber-panel-bg);
            border-radius: 10px;
            box-shadow: var(--cyber-shadow);
            position: relative;
            overflow: hidden;
            border: 1px solid var(--cyber-border);
        }

        .cyber-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--cyber-gradient);
            transition: var(--cyber-transition);
            z-index: 0;
        }

        .cyber-title {
            font-family: 'Orbitron', sans-serif;
            font-size: 2rem;
            color: var(--cyber-accent);
            text-shadow: 0 0 10px var(--cyber-accent-glow);
            margin: 0;
            position: relative;
            z-index: 1;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .cyber-controls {
            display: flex;
            gap: 1rem;
            position: relative;
            z-index: 1;
            align-items: center;
        }

        .cyber-period {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .cyber-label {
            font-family: 'Orbitron', sans-serif;
            color: var(--cyber-blue);
            font-size: 0.9rem;
            text-transform: uppercase;
        }

        .cyber-select {
            background-color: var(--cyber-bg-darker);
            color: var(--cyber-text);
            border: 1px solid var(--cyber-border);
            border-radius: 5px;
            padding: 0.5rem 1rem;
            font-family: 'Orbitron', sans-serif;
            font-size: 0.9rem;
            cursor: pointer;
            transition: var(--cyber-transition);
            box-shadow: 0 0 5px var(--cyber-blue-glow);
        }

        .cyber-select:hover, .cyber-select:focus {
            border-color: var(--cyber-accent);
            box-shadow: 0 0 10px var(--cyber-accent-glow);
            outline: none;
        }

        .cyber-button {
            display: inline-block;
            background-color: var(--cyber-accent);
            color: var(--cyber-text);
            border: none;
            border-radius: 5px;
            padding: 0.75rem 1.5rem;
            font-family: 'Orbitron', sans-serif;
            font-size: 0.9rem;
            text-transform: uppercase;
            text-decoration: none;
            letter-spacing: 1px;
            transition: var(--cyber-transition);
            box-shadow: 0 0 10px var(--cyber-accent-glow);
            cursor: pointer;
        }

        .cyber-button:hover {
            background-color: var(--cyber-blue);
            box-shadow: 0 0 15px var(--cyber-blue-glow);
            transform: translateY(-2px);
            color: var(--cyber-text);
            text-decoration: none;
        }

        /* Stats Grid */
        .cyber-stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .cyber-stats-card {
            background-color: var(--cyber-card-bg);
            border: 1px solid var(--cyber-border);
            border-radius: 10px;
            padding: 1.5rem;
            display: flex;
            align-items: center;
            transition: var(--cyber-transition);
            box-shadow: var(--cyber-shadow);
            position: relative;
            overflow: hidden;
        }

        .cyber-stats-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--cyber-gradient);
            transition: var(--cyber-transition);
            z-index: 0;
        }

        .cyber-stats-card:hover {
            transform: translateY(-5px);
            border-color: var(--cyber-accent);
            box-shadow: 0 0 20px var(--cyber-accent-glow);
        }

        .cyber-stats-icon {
            font-size: 2.5rem;
            color: var(--cyber-blue);
            margin-right: 1.5rem;
            filter: drop-shadow(0 0 5px var(--cyber-blue-glow));
            position: relative;
            z-index: 1;
        }

        .cyber-stats-content {
            position: relative;
            z-index: 1;
        }

        .cyber-stats-value {
            font-family: 'Orbitron', sans-serif;
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--cyber-text);
            margin-bottom: 0.25rem;
        }

        .cyber-stats-label {
            font-size: 0.9rem;
            color: var(--cyber-blue);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Panels */
        .cyber-panel {
            background-color: var(--cyber-panel-bg);
            border: 1px solid var(--cyber-border);
            border-radius: 10px;
            overflow: hidden;
            margin-bottom: 2rem;
            box-shadow: var(--cyber-shadow);
            transition: var(--cyber-transition);
            position: relative;
        }

        .cyber-panel::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--cyber-gradient);
            transition: var(--cyber-transition);
            z-index: 0;
        }

        .cyber-panel:hover {
            box-shadow: 0 0 20px var(--cyber-blue-glow);
            border-color: var(--cyber-blue);
        }

        .cyber-panel-header {
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--cyber-border);
            position: relative;
            z-index: 1;
        }

        .cyber-panel-title {
            font-family: 'Orbitron', sans-serif;
            font-size: 1.25rem;
            color: var(--cyber-accent);
            text-shadow: 0 0 10px var(--cyber-accent-glow);
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .cyber-panel-body {
            padding: 1.5rem;
            position: relative;
            z-index: 1;
        }

        /* Grid Layout */
        .cyber-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 1.5rem;
        }

        /* Table Styles */
        .cyber-table-container {
            overflow-x: auto;
            max-width: 100%;
        }

        .cyber-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            color: var(--cyber-text);
        }

        .cyber-table thead {
            background-color: rgba(5, 133, 198, 0.1);
        }

        .cyber-table th {
            padding: 1rem;
            text-align: left;
            font-family: 'Orbitron', sans-serif;
            font-size: 0.9rem;
            text-transform: uppercase;
            color: var(--cyber-blue);
            border-bottom: 1px solid var(--cyber-border);
        }

        .cyber-table td {
            padding: 1rem;
            border-bottom: 1px solid rgba(2, 54, 165, 0.3);
            transition: var(--cyber-transition);
        }

        .cyber-table tbody tr {
            transition: var(--cyber-transition);
        }

        .cyber-table tbody tr:hover {
            background-color: rgba(254, 3, 105, 0.05);
        }

        .cyber-table tbody tr:hover td {
            color: var(--cyber-accent);
        }

        /* Chart Container */
        .cyber-chart-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            min-height: 350px;
        }

        /* Responsive Adjustments */
        @media (max-width: 992px) {
            .cyber-grid {
                grid-template-columns: 1fr;
            }

            .cyber-stats-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            }
        }

        @media (max-width: 768px) {
            .cyber-title {
                font-size: 1.5rem;
                margin-bottom: 1rem;
            }

            .cyber-header {
                flex-direction: column;
                align-items: flex-start;
            }

            .cyber-controls {
                width: 100%;
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }

            .cyber-period, .cyber-export {
                width: 100%;
            }

            .cyber-button, .cyber-select {
                width: 100%;
                text-align: center;
            }

            .cyber-stats-card {
                padding: 1rem;
            }

            .cyber-stats-icon {
                font-size: 2rem;
                margin-right: 1rem;
            }

            .cyber-stats-value {
                font-size: 1.5rem;
            }
        }

        @media (max-width: 576px) {
            .cyber-container {
                padding: 0 0.5rem;
                margin: 1rem auto;
            }

            .cyber-stats-grid {
                grid-template-columns: 1fr;
            }

            .cyber-panel-body {
                padding: 1rem;
            }

            .cyber-table th, .cyber-table td {
                padding: 0.75rem 0.5rem;
                font-size: 0.85rem;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            // Set cyberpunk color scheme
            Chart.defaults.color = '#8a9cb3';
            Chart.defaults.font.family = "'Orbitron', sans-serif";
            
            // Initialize revenue chart
            var revenueCanvas = document.getElementById('revenueChart');
            var revenueCtx = revenueCanvas.getContext('2d');
            
            // Get data from data attributes
            var revenueLabels = JSON.parse(revenueCanvas.getAttribute('data-labels') || '[]');
            var revenueData = JSON.parse(revenueCanvas.getAttribute('data-values') || '[]');
            
            // Create glowing gradient for bars
            var blueGradient = revenueCtx.createLinearGradient(0, 0, 0, 400);
            blueGradient.addColorStop(0, 'rgba(5, 133, 198, 0.8)');
            blueGradient.addColorStop(1, 'rgba(5, 133, 198, 0.2)');
            
            var pinkGradient = revenueCtx.createLinearGradient(0, 0, 0, 400);
            pinkGradient.addColorStop(0, 'rgba(254, 3, 105, 0.8)');
            pinkGradient.addColorStop(1, 'rgba(254, 3, 105, 0.2)');
            
            new Chart(revenueCtx, {
                type: 'bar',
                data: {
                    labels: revenueLabels,
                    datasets: [{
                        label: 'Revenu Mensuel (TND)',
                        data: revenueData,
                        backgroundColor: blueGradient,
                        borderColor: '#0585c6',
                        borderWidth: 2,
                        hoverBackgroundColor: pinkGradient,
                        hoverBorderColor: '#fe0369',
                        borderRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(5, 133, 198, 0.1)',
                                borderColor: 'rgba(5, 133, 198, 0.2)',
                                tickColor: 'rgba(5, 133, 198, 0.2)'
                            },
                            ticks: {
                                color: '#8a9cb3',
                                callback: function(value) {
                                    return value + ' TND';
                                }
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            },
                            ticks: {
                                color: '#8a9cb3'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            labels: {
                                color: '#8a9cb3',
                                font: {
                                    family: "'Orbitron', sans-serif",
                                    size: 12
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(9, 18, 33, 0.9)',
                            titleColor: '#fe0369',
                            bodyColor: '#ffffff',
                            borderColor: '#0585c6',
                            borderWidth: 1,
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ' + context.raw + ' TND';
                                }
                            }
                        }
                    }
                }
            });
            
            // Initialize products chart
            var productCanvas = document.getElementById('productChart');
            var productCtx = productCanvas.getContext('2d');
            
            // Get data from data attributes
            var productLabels = JSON.parse(productCanvas.getAttribute('data-labels') || '[]');
            var productData = JSON.parse(productCanvas.getAttribute('data-values') || '[]');
            
            // Cyberpunk neon colors
            var neonColors = [
                '#fe0369', // pink
                '#0585c6', // blue
                '#7928ca', // purple
                '#10b981', // emerald
                '#f59e0b', // amber
                '#0ea5e9', // sky
                '#ec4899', // fuchsia
                '#14b8a6', // teal
                '#8b5cf6', // violet
                '#f43f5e'  // rose
            ];
            
            var glowColors = neonColors.map(color => color + '80'); // adding 50% opacity
            
            new Chart(productCtx, {
                type: 'doughnut',
                data: {
                    labels: productLabels,
                    datasets: [{
                        data: productData,
                        backgroundColor: neonColors,
                        borderColor: glowColors,
                        borderWidth: 2,
                        hoverOffset: 15
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    cutout: '60%',
                    plugins: {
                        legend: {
                            position: 'right',
                            labels: {
                                color: '#8a9cb3',
                                font: {
                                    family: "'Orbitron', sans-serif",
                                    size: 10,
                                    weight: '600'
                                },
                                boxWidth: 12,
                                boxHeight: 12,
                                padding: 10
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(9, 18, 33, 0.9)',
                            titleColor: '#fe0369',
                            bodyColor: '#ffffff',
                            borderColor: '#0585c6',
                            borderWidth: 1,
                            callbacks: {
                                label: function(context) {
                                    var label = context.label || '';
                                    var value = context.raw || 0;
                                    var total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    var percentage = Math.round((value / total) * 100);
                                    return label + ': ' + value + ' (' + percentage + '%)';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
{% endblock %}