{% extends 'baseadmin.html.twig' %}

{% block title %}Statistiques des Commandes{% endblock %}

{% block body %}
    <div class="container-main mt-4 liste">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Statistiques des Commandes</h1>
            <div class="d-flex align-items-center">
                <div class="mr-3">
                    <a href="{{ path('app_commande_stats_pdf', {'year': year|default("now"|date("Y"))}) }}" class="btn btn-danger btn-lg" style="font-weight: bold; font-size: 16px; margin-right: 15px;">
                        <i class="fas fa-file-pdf"></i> EXPORTER PDF
                    </a>
                </div>
                <div class="mr-3">
                    <form action="{{ path('app_commande_stats') }}" method="get" class="needs-validation" id="statFilterForm">
                        <div class="input-group">
                            <select name="year" class="form-control">
                                {% for y in range(2023, "now"|date("Y")) %}
                                    <option value="{{ y }}" {{ year|default("now"|date("Y")) == y ? 'selected' : '' }}>{{ y }}</option>
                                {% endfor %}
                            </select>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-filter"></i> Filtrer
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Export Section -->
        <div class="export-section">
            <p><strong>Téléchargez les statistiques complètes en PDF pour {{ year|default("now"|date("Y")) }}</strong></p>
            <div class="export-button-container">
                <a href="{{ path('app_commande_stats_pdf', {'year': year|default("now"|date("Y"))}) }}" class="btn btn-danger btn-export-pdf">
                    <i class="fas fa-file-pdf export-icon"></i> EXPORTER EN PDF
                </a>
            </div>
        </div>
        
        <div class="row">
            <!-- Revenue and Orders Overview -->
            <div class="col-md-6 mb-4">
                <div class="card-main">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">Revenu Total</h5>
                    </div>
                    <div class="card-body p-4 text-center">
                        <h2 class="display-4">{{ total_revenue|number_format(2, '.', ',') }} TND</h2>
                        <p class="text-muted">Revenu total pour {{ year|default("now"|date("Y")) }}</p>
                    </div>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <div class="card-main">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">Nombre Total de Commandes</h5>
                    </div>
                    <div class="card-body p-4 text-center">
                        <h2 class="display-4">{{ total_orders }}</h2>
                        <p class="text-muted">Commandes pour {{ year|default("now"|date("Y")) }}</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Most Sold Products -->
        <div class="card-main mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Top Produits les Plus Vendus en {{ year|default("now"|date("Y")) }}</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover" id="products-table">
                        <thead class="table-primary">
                            <tr>
                                <th>Rang</th>
                                <th>Produit</th>
                                <th>Quantité Vendue</th>
                                <th>Revenu Total</th>
                                <th>Prix Moyen</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for product in top_products %}
                            <tr>
                                <td class="align-middle">{{ loop.index }}</td>
                                <td class="align-middle">{{ product.name }}</td>
                                <td class="align-middle">{{ product.quantity }}</td>
                                <td class="align-middle">{{ product.revenue|number_format(2, '.', ',') }} TND</td>
                                <td class="align-middle">{{ product.avg_price|number_format(2, '.', ',') }} TND</td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="5" class="text-center">Aucun produit vendu</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Revenue by Month Chart -->
        <div class="card-main mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Aperçu des Revenus par Mois</h5>
            </div>
            <div class="card-body">
                <canvas id="revenueChart" width="400" height="200"
                    data-labels="{{ monthly_data|map(month => month.month_name)|json_encode() }}"
                    data-values="{{ monthly_data|map(month => month.revenue)|json_encode() }}">
                </canvas>
            </div>
        </div>
        
        <!-- Product Quantity Distribution -->
        <div class="card-main mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Distribution des Ventes par Produit</h5>
            </div>
            <div class="card-body">
                <div class="chart-container">
                    <canvas id="productChart" width="200" height="200"
                        data-labels="{{ top_products|map(product => product.name)|json_encode() }}"
                        data-values="{{ top_products|map(product => product.quantity)|json_encode() }}">
                    </canvas>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        :root {
            --primary-color: #6366f1; /* Indigo */
            --success-color: #10b981; /* Emerald */
            --info-color: #3b82f6; /* Blue */
            --danger-color: #ef4444; /* Red */
            --background-color: #f8fafc; /* Slate-50 */
            --card-bg: #ffffff;
            --text-color: #1e293b; /* Slate-800 */
            --text-muted: #64748b; /* Slate-500 */
            --border-color: #e2e8f0; /* Slate-200 */
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --transition: all 0.2s ease-in-out;
        }

        /* Reset and Base */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: var(--background-color);
            color: var(--text-color);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            line-height: 1.5;
            -webkit-font-smoothing: antialiased;
        }

        /* Container */
        .container-main {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        /* Typography */
        h1 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-color);
            margin-bottom: 1rem;
        }

        h5 {
            font-size: 1.125rem;
            font-weight: 600;
        }

        .display-4 {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--text-color);
        }

        .text-muted {
            color: var(--text-muted);
            font-size: 0.875rem;
        }

        /* Cards */
        .card-main {
            background-color: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            transition: var(--transition);
            overflow: hidden;
        }

        .card-main:hover {
            transform: translateY(-4px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            padding: 1rem 1.5rem;
            background-color: var(--primary-color);
            color: white;
            border-bottom: none;
        }

        .card-header.bg-success {
            background-color: var(--success-color);
        }

        .card-header.bg-info {
            background-color: var(--info-color);
        }

        .card-body {
            padding: 1.5rem;
        }

        /* Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.02em;
            transition: var(--transition);
            border: none;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background-color: #4f46e5;
            transform: translateY(-2px);
        }

        .btn-danger {
            background-color: var(--danger-color);
            color: white;
        }

        .btn-danger:hover {
            background-color: #dc2626;
            transform: translateY(-2px);
        }

        .btn-lg {
            padding: 0.875rem 2rem;
            font-size: 1rem;
        }

        /* Export Section */
        .export-section {
            background-color: var(--card-bg);
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: var(--shadow);
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 2rem;
            transition: var(--transition);
        }

        .export-section:hover {
            box-shadow: 0 6px 12px -2px rgba(0, 0, 0, 0.1);
        }

        .export-section p {
            font-size: 1rem;
            font-weight: 500;
            color: var(--text-color);
            margin: 0;
        }

        .btn-export-pdf {
            padding: 0.75rem 1.5rem;
            font-size: 0.875rem;
            border-radius: 8px;
        }

        .export-icon {
            margin-right: 0.5rem;
        }

        /* Table */
        .table {
            width: 100%;
            background-color: var(--card-bg);
            color: var(--text-color);
            border-collapse: separate;
            border-spacing: 0;
        }

        .table thead {
            background-color: var(--primary-color);
        }

        .table thead th {
            color: white;
            font-weight: 600;
            padding: 1rem;
            text-align: left;
            border: none;
        }

        .table tbody tr {
            transition: var(--transition);
        }

        .table tbody tr:hover {
            background-color: rgba(99, 102, 241, 0.05);
        }

        .table td {
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
            color: var(--text-color);
        }

        .table-responsive {
            border-radius: 8px;
            overflow: hidden;
        }

        /* Form */
        .form-control {
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background-color: white;
            color: var(--text-color);
            transition: var(--transition);
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
            outline: none;
        }

        .input-group {
            display: flex;
            align-items: stretch;
        }

        .input-group .btn {
            border-radius: 0 8px 8px 0;
        }

        /* Charts */
        canvas {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        /* Pie Chart Container */
        .chart-container {
            display: flex;
            justify-content: center;
            align-items: center;
            max-width: 350px; /* Smaller container for the pie chart */
            margin: 0 auto;
        }

        /* Layout */
        .row {
            display: flex;
            flex-wrap: wrap;
            margin: -1rem;
        }

        .row > [class*="col-"] {
            padding: 1rem;
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .row > [class*="col-"] {
                flex: 0 0 100%;
                max-width: 100%;
            }
        }

        @media (max-width: 768px) {
            .export-section {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .export-button-container {
                width: 100%;
            }

            .btn-export-pdf {
                width: 100%;
                justify-content: center;
            }

            h1 {
                font-size: 1.5rem;
            }

            .display-4 {
                font-size: 2rem;
            }

            .btn-lg {
                padding: 0.75rem 1.5rem;
                font-size: 0.875rem;
            }

            .chart-container {
                max-width: 300px;
            }
        }

        @media (max-width: 576px) {
            .container-main {
                padding: 0 0.5rem;
            }

            .table-responsive {
                margin: 0 -0.5rem;
            }

            .card-body {
                padding: 1rem;
            }

            .chart-container {
                max-width: 250px;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize revenue chart
            var revenueCanvas = document.getElementById('revenueChart');
            var revenueCtx = revenueCanvas.getContext('2d');
            
            // Get data from data attributes
            var revenueLabels = JSON.parse(revenueCanvas.getAttribute('data-labels') || '[]');
            var revenueData = JSON.parse(revenueCanvas.getAttribute('data-values') || '[]');
            
            new Chart(revenueCtx, {
                type: 'bar',
                data: {
                    labels: revenueLabels,
                    datasets: [{
                        label: 'Revenu Mensuel (TND)',
                        data: revenueData,
                        backgroundColor: 'rgba(99, 102, 241, 0.5)',
                        borderColor: 'rgba(99, 102, 241, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: '#1e293b',
                                callback: function(value) {
                                    return value + ' TND';
                                }
                            },
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)'
                            }
                        },
                        x: {
                            ticks: {
                                color: '#1e293b'
                            },
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                color: '#1e293b',
                                font: {
                                    size: 12
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: '#1e293b',
                            titleColor: '#ffffff',
                            bodyColor: '#ffffff',
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ' + context.raw + ' TND';
                                }
                            }
                        }
                    }
                }
            });
            
            // Initialize products chart
            var productCanvas = document.getElementById('productChart');
            var productCtx = productCanvas.getContext('2d');
            
            // Get data from data attributes
            var productLabels = JSON.parse(productCanvas.getAttribute('data-labels') || '[]');
            var productData = JSON.parse(productCanvas.getAttribute('data-values') || '[]');
            
            // Use colors from the image
            var backgroundColors = [
                '#f28b82', // Steam Key (red)
                '#fbbc04', // cs2 (orange)
                '#fff475', // elden ring (yellow)
                '#ccff90', // FC 25 (light green)
                '#a7ffeb', // overwatch Battle pass (light teal)
                '#80d8ff', // GTA 6 (light blue)
                '#82b1ff', // giftCard (blue)
                '#b388ff'  // Red dead redemption (purple)
            ];
            var borderColors = backgroundColors.map(color => color.replace('0.7', '1'));
            
            new Chart(productCtx, {
                type: 'pie',
                data: {
                    labels: productLabels,
                    datasets: [{
                        data: productData,
                        backgroundColor: backgroundColors,
                        borderColor: borderColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                            labels: {
                                color: '#1e293b',
                                font: {
                                    size: 12,
                                    weight: '600'
                                },
                                boxWidth: 14,
                                boxHeight: 14,
                                padding: 10,
                                generateLabels: function(chart) {
                                    const data = chart.data;
                                    if (data.labels.length && data.datasets.length) {
                                        return data.labels.map((label, i) => {
                                            const meta = chart.getDatasetMeta(0);
                                            const style = meta.controller.getStyle(i);
                                            return {
                                                text: label,
                                                fillStyle: style.backgroundColor,
                                                strokeStyle: style.borderColor,
                                                lineWidth: style.borderWidth,
                                                hidden: !chart.getDataVisibility(i),
                                                index: i
                                            };
                                        });
                                    }
                                    return [];
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: '#1e293b',
                            titleColor: '#ffffff',
                            bodyColor: '#ffffff',
                            callbacks: {
                                label: function(context) {
                                    var label = context.label || '';
                                    var value = context.raw || 0;
                                    var total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    var percentage = Math.round((value / total) * 100);
                                    return label + ': ' + value + ' (' + percentage + '%)';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
{% endblock %}