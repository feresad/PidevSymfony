{% extends 'base.html.twig' %}

{% block title %}{{ 'page.title'|trans({'%title%': 'nav.main_game_discussions'|trans}) }}{% endblock %}

{% block body %}
    <div class="nk-gap-1"></div>
    <div class="container">
        <!-- Header Section with Breadcrumbs and Language Switcher -->
        <div class="header-section d-flex justify-content-between align-items-center mb-2">
            <ul class="nk-breadcrumbs m-0">
                <li><a href="{{ path('app_home') }}" class="ds-ds">{{ 'nav.home'|trans }}</a></li>
                <li><span class="fa fa-angle-right"></span></li>
                <li><a href="{{ path('forum_index') }}" class="ds-ds">{{ 'nav.forum'|trans }}</a></li>
                <li><span class="fa fa-angle-right"></span></li>
                <li><span class="ds-ds">{{ 'nav.main_game_discussions'|trans }}</span></li>
            </ul>
            <!-- Language Switcher -->
            <div class="language-switcher">
                <div class="dropdown">
                    <button class="nk-btn nk-btn-rounded nk-btn-color-white dropdown-toggle" 
                            type="button" 
                            id="languageDropdown" 
                            data-bs-toggle="dropdown" 
                            aria-expanded="false" 
                            aria-label="{{ 'select_language'|trans }}">
                        <span class="fa fa-globe me-1"></span> {{ app.request.locale|upper }}
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="languageDropdown">
                        <li><a class="dropdown-item" href="{{ path('switch_language', {'locale': 'en'}) }}" aria-label="{{ 'english'|trans }}">🇬🇧 {{ 'english'|trans }}</a></li>
                        <li><a class="dropdown-item" href="{{ path('switch_language', {'locale': 'fr'}) }}" aria-label="{{ 'french'|trans }}">🇫🇷 {{ 'french'|trans }}</a></li>
                        <li><a class="dropdown-item" href="{{ path('switch_language', {'locale': 'es'}) }}" aria-label="{{ 'spanish'|trans }}">🇪🇸 {{ 'spanish'|trans }}</a></li>
                        <li><a class="dropdown-item" href="{{ path('switch_language', {'locale': 'ar'}) }}" aria-label="{{ 'arabic'|trans }}">🇸🇦 {{ 'arabic'|trans }}</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="nk-gap-1"></div>

    <div class="container nk-forum-container">
        <div class="row mb-4 align-items-center">
            <div class="col-md-8">
                <div class="nk-forum-search">
                    <input type="text" id="topicSearch" class="form-control" placeholder="{{ 'forum.search.placeholder'|trans }}">
                </div>
            </div>
            <div class="col-md-4 text-end">
                <a href="{{ path('forum_trivia') }}" class="nk-btn nk-btn-rounded nk-btn-color-main-2 me-2">{{ 'forum.button.trivia'|trans }}</a>
                <button type="button" class="nk-btn nk-btn-rounded nk-btn-color-white" data-bs-toggle="modal" data-bs-target="#newTopicModal">
                    {{ 'forum.button.new_topic'|trans }}
                </button>
            </div>
        </div>

        <div class="nk-forum-trending mb-3">
            <div class="nk-forum-trending-header">
                <img src="{{ asset('images/reddit-icon.png') }}" alt="Reddit" class="nk-forum-trending-icon">
                <span>{{ 'forum.trending.title'|trans }}</span>
            </div>
            <ul class="nk-forum-trending-list">
                {% for post in trendingPosts %}
                    <li>
                        <a href="{{ post.url }}" target="_blank" class="nk-forum-trending-link">
                            - {{ post.title|length > 60 ? post.title|slice(0, 60) ~ '...' : post.title }}
                        </a>
                    </li>
                {% endfor %}
            </ul>
        </div>

        <!-- Recommended Topics Section -->
       <div class="nk-forum-recommended mb-3">
    <div class="nk-forum-recommended-header">
        <img src="{{ asset('images/recommended-icon.png') }}" alt="{{ 'forum.recommended.icon_alt'|trans }}" class="nk-forum-recommended-icon">
        <span>{{ 'forum.recommended.title'|trans }}</span>
    </div>
    <div id="recommended-topics">
        <!-- Recommended topics will be loaded via AJAX -->
    </div>
</div>

        <div class="nk-forum">
            {% if topics|length > 0 %}
                {% for topic in topics %}
                    <div class="nk-forum-item {{ topic.locked ? 'nk-forum-locked' : '' }} sentiment-{{ topic.sentiment }}" 
                         data-game="{{ topic.gameImage ? topic.gameImage|replace({'img/games/': ''}) : 'No game' }}" 
                         data-author="{{ topic.startedBy }}" 
                         data-title="{{ topic.title|lower }}" 
                         data-content="{{ topic.content ? topic.content|lower : '' }}">
                        <div class="nk-forum-vote-section">
                            <button class="vote-btn upvote-btn voting-button upvote" data-id="{{ topic.id }}" data-type="question" data-vote-type="UP" data-fallback="↑">
                                <img src="{{ asset('images/uppvote-emoji.png') }}" alt="{{ 'forum.upvote'|trans }}" class="vote-icon">
                            </button>
                            <span class="vote-count">{{ topic.votes|default(0) }}</span>
                            <button class="vote-btn downvote-btn voting-button downvote" data-id="{{ topic.id }}" data-type="question" data-vote-type="DOWN" data-fallback="↓">
                                <img src="{{ asset('images/doownvote-emoji.png') }}" alt="{{ 'forum.downvote'|trans }}" class="vote-icon">
                            </button>
                        </div>
                        <div class="nk-forum-title">
                            <h3><a href="{{ path('forum_single_topic', { id: topic.id }) }}">{{ topic.title }}</a></h3>
                            <div class="nk-forum-title-sub">
                                {{ 'forum.topic.started_by'|trans({'author': topic.startedBy, 'date': topic.startedOn}) }}
                                <span class="sentiment-badge sentiment-{{ topic.sentiment }}">{{ topic.sentiment|capitalize }}</span>
                            </div>
                            {% if topic.content is defined and topic.content %}
                                <div class="nk-forum-content mt-2">
                                    <p>
                                        {{ topic.content|slice(0, 150) }}
                                        {% if topic.content|length > 150 %}...{% endif %}
                                    </p>
                                </div>
                            {% endif %}
                            {% if topic.image is defined and topic.image %}
                                <div class="nk-forum-title-image mt-8">
                                    <img src="{{ image_base_url2 ~ topic.image }}" alt="{{ 'forum.topic_media'|trans }}" style="max-width: 200px;">
                                </div>
                            {% endif %}
                            {% if topic.video is defined and topic.video %}
                                <div class="nk-forum-title-video mt-8">
                                    <video width="400" height="300" controls>
                                        <source src="{{ image_base_url2 ~ topic.video }}" type="video/mp4">
                                        {{ 'forum.video_unsupported'|trans }}
                                    </video>
                                </div>
                            {% endif %}
                            <div class="nk-forum-reactions mt-8">
                                <div class="reaction-display" data-id="{{ topic.id }}" data-type="question">
                                    {% for emoji, count in topic.reactionCounts|default([]) %}
                                        <span class="reaction-item" data-emoji="{{ emoji }}">{{ emoji }} {{ count }}</span>
                                    {% endfor %}
                                </div>
                            </div>
                            <div class="nk-forum-actions mt-8">
                                {% if app.user and app.user.id == topic.startedById %}
                                    <button type="button" class="nk-btn nk-btn-rounded nk-btn-color-main-1" data-bs-toggle="modal" data-bs-target="#updateTopicModal-{{ topic.id }}">
                                        {{ 'forum.edit'|trans }}
                                    </button>
                                    <button type="button" class="nk-btn nk-btn-rounded nk-btn-color-danger" data-bs-toggle="modal" data-bs-target="#deleteTopicModal-{{ topic.id }}">
                                        {{ 'forum.delete'|trans }}
                                    </button>
                                {% endif %}
                                <span class="share-btn" data-id="{{ topic.id }}" data-bs-toggle="modal" data-bs-target="#shareModal-{{ topic.id }}">
                                    <img src="{{ asset('images/share_icon.png') }}" alt="{{ 'forum.share'|trans }}" class="share-icon">
                                </span>
                                <div class="reaction-wrapper">
                                    <img src="{{ asset('images/meme_icon.png') }}" alt="{{ 'forum.react'|trans }}" class="reaction-icon" data-id="{{ topic.id }}" data-type="question">
                                </div>
                                <span class="spam-btn" data-id="{{ topic.id }}" data-type="question" data-user-id="{{ topic.startedById }}">
                                    <a href="#" class="nk-anchor">
                                        <span class="fa fa-flag"></span> {{ 'forum.spam'|trans }}
                                    </a>
                                </span>
                            </div>
                        </div>
                        <div class="nk-forum-count">
                            {{ 'forum.topic.posts'|trans({'count': topic.postCount}) }}
                        </div>
                        <div class="nk-forum-activity">
                            {% if topic.gameImage is defined and topic.gameImage %}
                                <div class="nk-forum-game-image mb-2">
                                    <img src="{{ image_base_url2 ~ topic.gameImage }}" alt="{{ 'forum.game_image'|trans }}" class="game-image">
                                </div>
                            {% else %}
                                <div class="nk-forum-game-image mb-2">
                                    <img src="{{ asset('assets/images/default-game.jpg') }}" alt="{{ 'forum.default_game_image'|trans }}" class="game-image">
                                </div>
                            {% endif %}
                            <div class="nk-forum-activity-title" title="{{ topic.lastActivityUser }}">
                                {{ 'forum.topic.last_activity'|trans({'user': topic.lastActivityUser}) }}
                            </div>
                            <div class="nk-forum-activity-date">
                                {{ topic.lastActivityDate }}
                            </div>
                        </div>
                    </div>

                    <!-- Share Modal -->
                    <div class="modal fade" id="shareModal-{{ topic.id }}" tabindex="-1" aria-labelledby="shareModalLabel-{{ topic.id }}" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="shareModalLabel-{{ topic.id }}">{{ 'forum.modal.share.title'|trans }}</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ 'general.close'|trans }}"></button>
                                </div>
                                <div class="modal-body">
                                    <p>{{ 'forum.modal.share.body'|trans }}</p>
                                    <div class="share-options">
                                        <a href="#" class="share-link facebook-share" data-id="{{ topic.id }}" target="_blank">
                                            <i class="fab fa-facebook-f"></i> Facebook
                                        </a>
                                        <a href="#" class="share-link reddit-share" data-id="{{ topic.id }}" target="_blank">
                                            <i class="fab fa-reddit-alien"></i> Reddit
                                        </a>
                                        <a href="#" class="share-link twitter-share" data-id="{{ topic.id }}" target="_blank">
                                            <i class="fab fa-twitter"></i> Twitter
                                        </a>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'forum.modal.share.close'|trans }}</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    {% if app.user and app.user.id == topic.startedById %}
                        <!-- Update Topic Modal -->
                        <div class="modal fade" id="updateTopicModal-{{ topic.id }}" tabindex="-1" aria-labelledby="updateTopicModalLabel-{{ topic.id }}" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="updateTopicModalLabel-{{ topic.id }}">{{ 'forum.modal.update_topic.title'|trans }}</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ 'general.close'|trans }}"></button>
                                    </div>
                                    <div class="modal-body">
                                        {{ form_start(topic.updateForm, {'attr': {'class': 'profanity-check-form'}}) }}
                                            <div class="mb-3">
                                                {{ form_label(topic.updateForm.title, 'forum.modal.form.title'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                                {{ form_widget(topic.updateForm.title, {'attr': {'class': 'form-control'}}) }}
                                                {{ form_errors(topic.updateForm.title) }}
                                            </div>
                                            <div class="mb-3">
                                                {{ form_label(topic.updateForm.content, 'forum.modal.form.content'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                                {{ form_widget(topic.updateForm.content, {'attr': {'class': 'form-control'}}) }}
                                                {{ form_errors(topic.updateForm.content) }}
                                            </div>
                                            <div class="mb-3">
                                                {{ form_label(topic.updateForm.media_type, 'forum.modal.form.media_type'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                                {{ form_widget(topic.updateForm.media_type, {'attr': {'class': 'form-control'}}) }}
                                                {{ form_errors(topic.updateForm.media_type) }}
                                            </div>
                                            <div class="mb-3">
                                                {{ form_label(topic.updateForm.media_file, 'forum.modal.form.media_file'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                                {{ form_widget(topic.updateForm.media_file, {'attr': {'class': 'form-control-file'}}) }}
                                                {{ form_errors(topic.updateForm.media_file) }}
                                            </div>
                                            <div class="mb-3">
                                                {{ form_label(topic.updateForm.game_id, 'forum.modal.form.game_id'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                                {{ form_widget(topic.updateForm.game_id, {'attr': {'class': 'form-control'}}) }}
                                                {{ form_errors(topic.updateForm.game_id) }}
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">{{ 'forum.modal.form.emotes'|trans }}</label>
                                                <div class="emotes-options">
                                                    <button type="button" class="btn btn-emote" onclick="addEmote('😊', 'update_topic_form_{{ topic.id }}_content')">😊</button>
                                                    <button type="button" class="btn btn-emote" onclick="addEmote('😂', 'update_topic_form_{{ topic.id }}_content')">😂</button>
                                                    <button type="button" class="btn btn-emote" onclick="addEmote('❤️', 'update_topic_form_{{ topic.id }}_content')">❤️</button>
                                                    <button type="button" class="btn btn-emote" onclick="addEmote('👍', 'update_topic_form_{{ topic.id }}_content')">👍</button>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'general.close'|trans }}</button>
                                                {{ form_widget(topic.updateForm.submit, {'attr': {'class': 'btn btn-primary', 'label': 'forum.modal.form.submit'|trans}}) }}
                                            </div>
                                        {{ form_end(topic.updateForm) }}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Delete Topic Modal -->
                        <div class="modal fade" id="deleteTopicModal-{{ topic.id }}" tabindex="-1" aria-labelledby="deleteTopicModalLabel-{{ topic.id }}" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteTopicModalLabel-{{ topic.id }}">{{ 'forum.modal.delete_topic.title'|trans }}</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ 'general.close'|trans }}"></button>
                                    </div>
                                    <div class="modal-body">
                                        {{ 'forum.modal.delete_topic.body'|trans({'title': topic.title})|raw }}
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'forum.modal.delete_topic.cancel'|trans }}</button>
                                        <a href="{{ path('forum_delete_topic', { id: topic.id }) }}" class="btn btn-danger">{{ 'forum.modal.delete_topic.delete'|trans }}</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}

                <!-- Pagination -->
                {% if topics|length > 0 %}
                    <div class="row">
                        <div class="col-md-12">
                            <div class="nk-pagination nk-pagination-center">
                                <a href="{{ path('forum_topics', {'page': pagination.currentPage - 1}) }}"
                                   class="nk-pagination-prev {{ pagination.currentPage == 1 ? 'disabled' : '' }}">
                                    <span class="ion-ios-arrow-back"></span>
                                </a>
                                <nav>
                                    {% if pagination.currentPage > 3 %}
                                        <a href="{{ path('forum_topics', {'page': 1}) }}">1</a>
                                        {% if pagination.currentPage > 4 %}
                                            <span>...</span>
                                        {% endif %}
                                    {% endif %}
                                    {% for i in max(1, pagination.currentPage - 2)..min(pagination.totalPages, pagination.currentPage + 2) %}
                                        <a href="{{ path('forum_topics', {'page': i}) }}"
                                           class="{{ pagination.currentPage == i ? 'nk-pagination-current' : '' }}">
                                            {{ i }}
                                        </a>
                                    {% endfor %}
                                    {% if pagination.currentPage < pagination.totalPages - 2 %}
                                        {% if pagination.currentPage < pagination.totalPages - 3 %}
                                            <span>...</span>
                                        {% endif %}
                                        <a href="{{ path('forum_topics', {'page': pagination.totalPages}) }}">{{ pagination.totalPages }}</a>
                                    {% endif %}
                                </nav>
                                <a href="{{ path('forum_topics', {'page': pagination.currentPage + 1}) }}"
                                   class="nk-pagination-next {{ pagination.currentPage == pagination.totalPages ? 'disabled' : '' }}">
                                    <span class="ion-ios-arrow-forward"></span>
                                </a>
                            </div>
                            <div class="text-center mt-2">
                                {{ 'forum.pagination.showing'|trans({
                                    'start': (pagination.currentPage - 1) * pagination.itemsPerPage + 1,
                                    'end': min(pagination.currentPage * pagination.itemsPerPage, pagination.totalItems),
                                    'total': pagination.totalItems
                                }) }}
                            </div>
                        </div>
                    </div>
                {% endif %}
            {% else %}
                <div class="text-center">
                    <p>{{ 'forum.no_topics'|trans }}</p>
                </div>
            {% endif %}
        </div>

        <!-- New Topic Modal -->
        <div class="modal fade" id="newTopicModal" tabindex="-1" aria-labelledby="newTopicModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="newTopicModalLabel">{{ 'forum.modal.new_topic.title'|trans }}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ 'general.close'|trans }}"></button>
                    </div>
                    <div class="modal-body">
                        {{ form_start(newTopicForm, {'attr': {'class': 'profanity-check-form'}}) }}
                            <div class="mb-3">
                                {{ form_label(newTopicForm.title, 'forum.modal.form.title'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.title, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.title) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.content, 'forum.modal.form.content'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.content, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.content) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.media_type, 'forum.modal.form.media_type'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.media_type, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.media_type) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.media_file, 'forum.modal.form.media_file'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.media_file, {'attr': {'class': 'form-control-file'}}) }}
                                {{ form_errors(newTopicForm.media_file) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.game_id, 'forum.modal.form.game_id'|trans, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.game_id, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.game_id) }}
                            </div>
                            <div class="mb-3">
                                <label class="form-label">{{ 'forum.modal.form.emotes'|trans }}</label>
                                <div class="emotes-options">
                                    <button type="button" class="btn btn-emote" onclick="addEmote('😊', 'new_topic_form_content')">😊</button>
                                    <button type="button" class="btn btn-emote" onclick="addEmote('😂', 'new_topic_form_content')">😂</button>
                                    <button type="button" class="btn btn-emote" onclick="addEmote('❤️', 'new_topic_form_content')">❤️</button>
                                    <button type="button" class="btn btn-emote" onclick="addEmote('👍', 'new_topic_form_content')">👍</button>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'general.close'|trans }}</button>
                                {{ form_widget(newTopicForm.submit, {'attr': {'class': 'btn btn-primary', 'label': 'forum.modal.form.submit'|trans}}) }}
                            </div>
                        {{ form_end(newTopicForm) }}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="nk-gap-2"></div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/topics.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body {
            background: url("{{ asset('images/arcane.jpg') }}") no-repeat center center fixed;
            background-size: cover;
            position: relative;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(28, 37, 38, 0.7);
            pointer-events: none; 
        }

        .nk-forum-container {
            background: rgba(10, 31, 40, 1) !important;
            position: relative;
        }

        /* Header Section Styling */
        .header-section {
            position: relative;
            z-index: 1000;
        }

        /* Language Switcher Styling */
        .language-switcher {
            position: relative;
        }

        .language-switcher .dropdown {
            display: inline-block;
        }

        .language-switcher .dropdown-toggle {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .language-switcher .dropdown-menu {
            position: absolute;
            top: 100%;
            right: 0;
            background: rgba(35, 41, 48, 0.95);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 5px;
            z-index: 1001;
            min-width: 150px;
        }

        .language-switcher .dropdown-item {
            color: #d1d5db;
            font-family: 'Montserrat', sans-serif;
            padding: 8px 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .language-switcher .dropdown-item:hover {
            background-color: #0585e6;
            color: #fff;
        }

        /* Ensure breadcrumbs don't overlap */
        .nk-breadcrumbs {
            flex-grow: 1;
        }

        /* Responsive adjustments */
        @media (max-width: 767px) {
            .header-section {
                flex-direction: column;
                align-items: flex-start;
            }
            .language-switcher {
                margin-top: 10px;
                align-self: flex-end;
            }
            .nk-breadcrumbs {
                margin-bottom: 10px;
            }
        }

        /* Modal styling */
        .modal-backdrop {
            background: rgba(0, 0, 0, 0.5);
        }

        .modal {
            display: none; /* Ensure Bootstrap handles visibility */
        }

        .modal-content {
            background: rgba(35, 41, 48, 0.95);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            color: #d1d5db;
        }

        /* Style for select elements in the modal */
        .modal-body select {
            background: rgba(41, 49, 57, 0.8);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: #d1d5db;
            padding: 8px;
            border-radius: 5px;
            font-family: 'Montserrat', sans-serif;
            width: 100%;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            background-image: url('data:image/svg+xml;utf8,<svg fill="white" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>');
            background-repeat: no-repeat;
            background-position: right 10px center;
            background-size: 12px;
        }

        .modal-body select:focus {
            outline: none;
            border-color: #0585e6;
            box-shadow: 0 0 5px rgba(5, 133, 230, 0.5);
        }

        .modal-body select option {
            background: #232930;
            color: #d1d5db;
            font-family: 'Montserrat', sans-serif;
            padding: 8px;
        }

        .modal-body select option:hover {
            background: #0585e6;
            color: #fff;
        }

        /* Recommended Topics Styling */
        .nk-forum-recommended {
            background-color: #e0e0e0;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #e0e0e0;
        }
        .nk-forum-recommended-header {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            font-size: 1.25rem;
            font-weight: bold;
            color: #333;
        }
        .nk-forum-recommended .nk-forum-item {
            background-color: #e0e0e0;
            margin-bottom: 10px;
            border-left: 4px solid #007bff;
        }

        /* Rest of your existing styles */
        .nk-gaming-swal { 
            border: 2px solid #0585e6; 
            box-shadow: 0 0 20px rgba(5, 133, 230, 0.5); 
            font-family: 'Montserrat', sans-serif; 
        }
        .nk-gaming-swal-title { 
            color: #fff; 
            text-transform: uppercase; 
            letter-spacing: 1px; 
        }
        .nk-gaming-swal-content { 
            color: rgb(255, 255, 255); 
        }
        .swal2-confirm { 
            transition: transform 0.2s ease; 
        }
        .swal2-confirm:hover { 
            transform: scale(1.05); 
        }
        .nk-forum-reactions { 
            display: flex; 
            align-items: center; 
            gap: 10px; 
        }
        .reaction-display { 
            display: flex; 
            gap: 5px; 
        }
        .reaction-item { 
            background-color: rgba(41, 49, 57, 0.8); 
            padding: 4px 8px; 
            border-radius: 3px; 
            font-size: 1.5rem; 
            line-height: 1; 
        }
        .reaction-wrapper { 
            position: relative; 
            display: inline-flex; 
            align-items: center; 
        }
        .reaction-icon { 
            width: 30px; 
            height: 30px; 
            cursor: pointer; 
            transition: transform 0.3s ease; 
        }
        .reaction-icon:hover { 
            transform: scale(1.1); 
        }
        .emoji-picker-container {
            position: absolute;
            top: 100%;
            left: 0;
            background-color: rgba(35, 41, 48, 0.95);
            border: 1px solid rgba(255, 255, 255, 0.2);
            padding: 10px;
            border-radius: 5px;
            max-width: 200px;
            max-height: 200px;
            overflow-y: auto;
        }
        .emoji-section { 
            margin-bottom: 10px; 
        }
        .emoji-section h4 { 
            color: #d1d5db; 
            font-size: 1rem; 
            margin-bottom: 5px; 
        }
        .emoji-grid { 
            display: grid; 
            grid-template-columns: repeat(5, 1fr); 
            gap: 8px; 
        }
        .emoji-option { 
            cursor: pointer; 
            font-size: 1.2rem; 
            padding: 4px; 
            text-align: center; 
        }
        .emoji-option:hover { 
            background-color: #0585e6; 
            border-radius: 3px; 
        }
        .nk-forum-actions { 
            display: flex; 
            align-items: center; 
            gap: 10px; 
        }
        .sentiment-badge {
            margin-left: 10px;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: bold;
            text-transform: uppercase;
        }
        .sentiment-positive { 
            background-color: rgba(40, 167, 69, 0.8); 
            color: #fff; 
        }
        .sentiment-negative { 
            background-color: rgba(220, 53, 69, 0.8); 
            color: #fff; 
        }
        .sentiment-neutral { 
            background-color: rgba(108, 117, 125, 0.8); 
            color: #fff; 
        }
        .nk-forum-item.sentiment-positive { 
            border-left: 4px solid #28a745; 
        }
        .nk-forum-item.sentiment-negative { 
            border-left: 4px solid #dc3545; 
        }
        .nk-forum-item.sentiment-neutral { 
            border-left: 4px solid #6c757d; 
        }
    
        .nk-btn-color-main-2 {
            background-color: #0585e6 !important;
            color: #fff !important;
        }
        .nk-btn-color-main-2:hover {
            background-color: #0471c6 !important;
        }

        .nk-forum-item {
            background: rgba(3, 41, 97, 0.15) !important; 
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid #0585e6 !important;
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            margin-bottom: 10px;
            padding: 10px;
        }

        .nk-forum-item:hover {
            background: rgba(1, 33, 58, 0.25) !important; 
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3);
        }

        @supports not (backdrop-filter: blur(10px)) {
            .nk-forum-item {
                background: rgba(5, 133, 230, 0.4) !important; 
            }
            .nk-forum-item:hover {
                background: rgba(5, 133, 230, 0.5) !important;
            }
        }

        .nk-forum-item h3 a,
        .nk-forum-item .nk-forum-title-sub,
        .nk-forum-item .nk-forum-content p,
        .nk-forum-item .nk-forum-count,
        .nk-forum-item .nk-forum-activity-title,
        .nk-forum-item .nk-forum-activity-date {
            color: #ffffff;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
        }

        .nk-forum-vote-section .vote-count {
            color: #ffffff;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
        }
        
        .ds-ds {  
            color: #ffffff !important;
            z-index: 1000;
        }
        .nk-forum-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                135deg,
                rgba(255, 255, 255, 0.1) 0%,
                rgba(255, 255, 255, 0) 50%
            );
            border-radius: 20px;
            pointer-events: none;
        }

        .report-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(35, 41, 48, 0.95);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            width: 400px;
            max-width: 90%;
        }
        .report-modal-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
        }
        .report-modal form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        .report-modal select,
        .report-modal textarea {
            background: rgba(41, 49, 57, 0.8);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: #d1d5db;
            padding: 8px;
            border-radius: 5px;
            font-family: 'Montserrat', sans-serif;
        }
        .report-modal select:focus,
        .report-modal textarea:focus {
            outline: none;
            border-color: #0585e6;
            box-shadow: 0 0 5px rgba(5, 133, 230, 0.5);
        }
        .report-modal button {
            padding: 8px 16px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            transition: transform 0.2s ease;
            font-family: 'Montserrat', sans-serif;
        }
        .report-modal button:hover {
            transform: scale(1.05);
        }
        .report-modal .submit-btn {
            background: #0585e6;
            color: #fff;
        }
        .report-modal .cancel-btn {
            background: #404854;
            color: #fff;
        }
        .report-modal h3 {
            color: #fff;
            margin-bottom: 15px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .nk-pagination .disabled {
            pointer-events: none;
            opacity: 0.5;
        }
        .nk-pagination-center {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
        }
        .nk-pagination nav a {
            margin: 0 5px;
            padding: 5px 10px;
            text-decoration: none;
            color: #ffffff;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 100px;
            transition: background 0.3s ease;
        }
        .nk-pagination nav a:hover {
            background: rgba(255, 255, 255, 0.2);
        }
        .nk-pagination-current {
            background-color: #fe0369 !important;
            color: white !important;
        }

        .nk-anchor { 
            display: inline-flex; 
            spacing: 3px;  
            align-items: center; 
            color: #d1d5db; 
            font-size: 1rem; 
            text-decoration: none; 
            transition: color 0.3s ease; 
            background: none; 
            border: none; 
            padding: 0; 
            cursor: pointer !important; 
        }
        .vote-btn.voted {
            opacity: 0.5;
            cursor: not-allowed;
        }
/* Recommended Section Styling */
.nk-forum-recommended {
    background: rgba(10, 31, 40, 0.9);
    padding: 20px;
    border-radius: 15px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid transparent;
}

.nk-forum-recommended-header {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
    font-size: 1.5rem;
    font-weight: bold;
    color: #ffffff;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.nk-forum-recommended-icon {
    width: 24px;
    height: 24px;
    margin-right: 8px;
}

.nk-forum-recommended-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

.nk-forum-recommended-item {
    background: rgba(3, 41, 97, 0.15);
    border-radius: 15px;
    border: 1px solid transparent;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
}

.nk-forum-recommended-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

.nk-forum-recommended-item.sentiment-positive {
    border-left: 4px solid #28a745;
}

.nk-forum-recommended-item.sentiment-negative {
    border-left: 4px solid #dc3545;
}

.nk-forum-recommended-item.sentiment-neutral {
    border-left: 4px solid #6c757d;
}

.nk-forum-recommended-media {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
}

.nk-forum-recommended-media img,
.nk-forum-recommended-media video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
}

.nk-forum-recommended-overlay {
    position: absolute;
    top: 10px;
    left: 10px;
    right: 10px;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
}

.nk-forum-recommended-overlay .nk-forum-vote-section {
    background: rgba(0, 0, 0, 0.5);
    border-radius: 8px;
    padding: 5px;
}

.nk-forum-recommended-overlay .nk-forum-game-image {
    width: 50px;
    height: 50px;
    border-radius: 4px;
    object-fit: cover;
    background: rgba(0, 0, 0, 0.5);
    padding: 2px;
}

.nk-forum-recommended-content {
    padding: 15px;
}

.nk-forum-recommended-content h3 a {
    font-size: 1.2rem;
    color: #ffffff;
    text-decoration: none;
    transition: color 0.3s ease;
}

.nk-forum-recommended-content h3 a:hover {
    color:rgb(255, 204, 0);
}

.nk-forum-title-sub {
    font-size: 0.9rem;
    color: #d1d5db;
    margin-bottom: 10px;
}

.nk-forum-content p {
    font-size: 0.95rem;
    color: #d1d5db;
    margin: 0;
}

.nk-forum-recommended-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 10px;
}

.nk-forum-count {
    font-size: 0.9rem;
    color: #ffffff;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

@supports not (backdrop-filter: blur(10px)) {
    .nk-forum-recommended {
        background: rgba(10, 31, 40, 1);
    }
    .nk-forum-recommended-item {
        background: rgba(5, 133, 230, 0.4);
    }
    .nk-forum-recommended-item:hover {
        background: rgba(5, 133, 230, 0.5);
    }
}

/* Responsive Adjustments */
@media (max-width: 767px) {
    .nk-forum-recommended-grid {
        grid-template-columns: 1fr;
    }
    .nk-forum-recommended-media {
        height: 150px;
    }
    .nk-forum-recommended-overlay .nk-forum-game-image {
        width: 24px;
        height: 24px;
    }
}  
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Load recommended topics via AJAX
            fetch("{{ path('forum_recommended') }}", {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById('recommended-topics').innerHTML = data;
            })
            .catch(error => {
                console.error('Error loading recommended topics:', error);
                document.getElementById('recommended-topics').innerHTML = "<p>{{ 'forum.recommended.error'|trans }}</p>";
            });
        });

        function addEmote(emote, fieldId) {
            const contentField = document.querySelector('#' + fieldId);
            if (contentField) {
                const startPos = contentField.selectionStart;
                const endPos = contentField.selectionEnd;
                const text = contentField.value;
                contentField.value = text.substring(0, startPos) + emote + text.substring(endPos);
                contentField.selectionStart = contentField.selectionEnd = startPos + emote.length;
                contentField.focus();
            }
        }

        $(document).ready(function() {
            let sentimentMap = {
                positive: ['👍', '😊', '😂', '❤️', '🎉', '😍', '👏', '🌟', '😎', '💪'],
                negative: ['👎', '😢', '😡', '💔', '😤', '😞', '🤬', '😣', '💢', '😠'],
                neutral: ['🤔', '😐', '🙂', '👀', '🤷', '😶', '🤝', '🙄', '😴', '🤓']
            };

            // Fetch sentiment map from API
            $.ajax({
                url: "{{ path('api_get_sentiment_map') }}",
                method: 'GET',
                success: function(response) {
                    if (response.success && response.sentimentMap) {
                        sentimentMap = response.sentimentMap;
                        initializeReactions();
                        fetchUserVotes();
                    } else {
                        console.error('Failed to fetch sentiment map:', response.message);
                        initializeReactions();
                        fetchUserVotes();
                    }
                },
                error: function(xhr, status, error) {
                    console.error('AJAX error fetching sentiment map:', status, error);
                    initializeReactions();
                    fetchUserVotes();
                }
            });

            function debounce(func, wait) {
                let timeout;
                return function(...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            function fetchReactions(id, type, $display) {
                $.ajax({
                    url: "{{ path('react_action') }}",
                    method: 'POST',
                    data: { id: id, type: type, action: 'fetch' },
                    success: function(response) {
                        if (response.success) {
                            updateReactionDisplay($display, response.reactionCounts || {});
                        } else {
                            console.error('Failed to fetch reactions:', response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX error fetching reactions:', status, error);
                    }
                });
            }

            function updateReactionDisplay($display, reactionCounts) {
                let reactionHtml = '';
                for (const [emoji, count] of Object.entries(reactionCounts)) {
                    reactionHtml += `<span class="reaction-item" data-emoji="${emoji}">${emoji} ${count}</span>`;
                }
                $display.html(reactionHtml);
            }

            function initializeReactions() {
                $('.reaction-display').each(function() {
                    const $display = $(this);
                    const id = $display.data('id');
                    const type = $display.data('type');
                    if ($display.children().length === 0) {
                        fetchReactions(id, type, $display);
                    }
                });
            }

            const showEmojiPicker = debounce(function($icon, id, type) {
                if (sentimentMap.positive.length === 0) return;

                $('.emoji-picker-container').remove();

                let pickerHtml = '<div class="emoji-picker-container">';
                
                pickerHtml += '<div class="emoji-section"><h4>{{ "forum.reactions.positive"|trans }}</h4><div class="emoji-grid">';
                sentimentMap.positive.forEach(emoji => {
                    pickerHtml += `<span class="emoji-option" data-emoji="${emoji}" data-id="${id}" data-type="${type}">${emoji}</span>`;
                });
                pickerHtml += '</div></div>';

                pickerHtml += '<div class="emoji-section"><h4>{{ "forum.reactions.negative"|trans }}</h4><div class="emoji-grid">';
                sentimentMap.negative.forEach(emoji => {
                    pickerHtml += `<span class="emoji-option" data-emoji="${emoji}" data-id="${id}" data-type="${type}">${emoji}</span>`;
                });
                pickerHtml += '</div></div>';

                pickerHtml += '<div class="emoji-section"><h4>{{ "forum.reactions.neutral"|trans }}</h4><div class="emoji-grid">';
                sentimentMap.neutral.forEach(emoji => {
                    pickerHtml += `<span class="emoji-option" data-emoji="${emoji}" data-id="${id}" data-type="${type}">${emoji}</span>`;
                });
                pickerHtml += '</div></div>';

                pickerHtml += '</div>';

                $('body').append(pickerHtml);
                const $newPicker = $('.emoji-picker-container');

                const iconOffset = $icon.offset();
                const iconHeight = $icon.outerHeight();
                const viewportHeight = $(window).height();
                const pickerHeight = $newPicker.outerHeight();
                let topPosition = iconOffset.top + iconHeight;
                if (topPosition + pickerHeight > viewportHeight) {
                    topPosition = iconOffset.top - pickerHeight;
                }
                $newPicker.css({
                    top: topPosition,
                    left: iconOffset.left
                }).fadeIn(100);

                $newPicker.data('reaction-wrapper', $icon.closest('.reaction-wrapper'));
            }, 200);

            function fetchUserVotes() {
                const topicIds = [];
                $('.vote-btn').each(function() {
                    const id = $(this).data('id');
                    if (!topicIds.includes(id)) {
                        topicIds.push(id);
                    }
                });

                if (topicIds.length === 0) return;

                $.ajax({
                    url: "{{ path('ajax_fetch_user_votes') }}",
                    method: 'POST',
                    data: { topicIds: topicIds },
                    success: function(response) {
                        if (response.success) {
                            response.votes.forEach(vote => {
                                const $voteSection = $(`.nk-forum-vote-section .vote-btn[data-id="${vote.topicId}"]`);
                                const $upvoteBtn = $voteSection.filter('.upvote-btn');
                                const $downvoteBtn = $voteSection.filter('.downvote-btn');

                                if (vote.voteType === 'UP') {
                                    $upvoteBtn.addClass('voted').prop('disabled', true);
                                    $downvoteBtn.removeClass('voted').prop('disabled', false);
                                } else if (vote.voteType === 'DOWN') {
                                    $downvoteBtn.addClass('voted').prop('disabled', true);
                                    $upvoteBtn.removeClass('voted').prop('disabled', false);
                                }
                            });
                        } else {
                            console.error('Failed to fetch user votes:', response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX error fetching user votes:', status, error);
                    }
                });
            }

            $(document).on('mouseenter', '.reaction-icon', function() {
                const $icon = $(this);
                const id = $icon.data('id');
                const type = $icon.data('type');
                showEmojiPicker($icon, id, type);
            });

            $(document).on('mouseenter', '.emoji-picker-container', function() {
                $(this).stop().fadeIn(100);
            });

            $(document).on('mouseleave', '.reaction-wrapper', function(e) {
                const $wrapper = $(this);
                const $picker = $('.emoji-picker-container');
                const relatedTarget = $(e.relatedTarget);

                if ($picker.length && (relatedTarget.is($picker) || relatedTarget.closest('.emoji-picker-container').length)) {
                    return;
                }

                if ($picker.data('reaction-wrapper')?.is($wrapper)) {
                    $picker.fadeOut(100, function() {
                        $(this).remove();
                    });
                }
            });

            $(document).on('mouseleave', '.emoji-picker-container', function(e) {
                const $picker = $(this);
                const $wrapper = $picker.data('reaction-wrapper');
                const relatedTarget = $(e.relatedTarget);

                if ($wrapper && (relatedTarget.is($wrapper) || relatedTarget.closest('.reaction-wrapper').length)) {
                    return;
                }

                $picker.fadeOut(100, function() {
                    $(this).remove();
                });
            });

            $(document).on('click', '.emoji-option', function() {
                const $emoji = $(this);
                const emoji = $emoji.data('emoji');
                const id = $emoji.data('id');
                const type = $emoji.data('type');
                const $display = $(`.reaction-display[data-id="${id}"]`);
                const $picker = $('.emoji-picker-container');

                $.ajax({
                    url: "{{ path('react_action') }}",
                    method: 'POST',
                    data: { id: id, type: type, emoji: emoji, action: 'react' },
                    success: function(response) {
                        if (response.success) {
                            updateReactionDisplay($display, response.reactionCounts);
                            $picker.fadeOut(100, function() {
                                $(this).remove();
                            });
                        } else {
                            Swal.fire({
                                title: '{{ "forum.alert.error"|trans }}',
                                text: response.message,
                                imageUrl: '{{ asset("images/one-piece-luffy.gif") }}',
                                imageWidth: 100,
                                imageHeight: 100,
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#ff6f61'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            title: '{{ "forum.alert.error"|trans }}',
                            text: '{{ "forum.alert.reaction_error"|trans }}',
                            imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                            imageWidth: 100,
                            imageHeight: 100,
                            background: '#1c2526',
                            color: '#d1d5db',
                            confirmButtonColor: '#ff6f61'
                        });
                    }
                });
            });

            $('#topicSearch').on('input', function() {
                const searchTerm = $(this).val().toLowerCase().trim();
                $('.nk-forum-item').each(function() {
                    const $topic = $(this);
                    const game = $topic.data('game').toLowerCase();
                    const author = $topic.data('author').toLowerCase();
                    const title = $topic.data('title').toLowerCase();
                    const content = $topic.data('content').toLowerCase();

                    const matches = (
                        game.includes(searchTerm) ||
                        author.includes(searchTerm) ||
                        title.includes(searchTerm) ||
                        content.includes(searchTerm)
                    );

                    $topic.toggle(matches);
                });
            });

            $(document).on('click', '.vote-btn', function(e) {
                e.preventDefault();
                const $btn = $(this);
                const id = $btn.data('id');
                const type = $btn.data('type');
                const voteType = $btn.data('vote-type');
                const $voteSection = $btn.closest('.nk-forum-vote-section');
                const $voteCount = $voteSection.find('.vote-count');
                const $upvoteBtn = $voteSection.find('.upvote-btn');
                const $downvoteBtn = $voteSection.find('.downvote-btn');

                if ($btn.prop('disabled')) {
                    return;
                }

                $.ajax({
                    url: "{{ path('ajax_vote_action') }}",
                    method: 'POST',
                    data: { id: id, type: type, vote_type: voteType },
                    success: function(response) {
                        if (response.success) {
                            $voteCount.text(response.votes);

                            if (response.hasUpvoted) {
                                $upvoteBtn.addClass('voted').prop('disabled', true);
                                $downvoteBtn.removeClass('voted').prop('disabled', false);
                            } else if (response.hasDownvoted) {
                                $downvoteBtn.addClass('voted').prop('disabled', true);
                                $upvoteBtn.removeClass('voted').prop('disabled', false);
                            }
                        } else {
                            Swal.fire({
                                title: '{{ "forum.voting_error"|trans }}',
                                text: response.message,
                                imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                                imageWidth: 100,
                                imageHeight: 100,
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#fe0369'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            title: '{{ "forum.voting_error"|trans }}',
                            text: '{{ "forum.error_voting"|trans }}',
                            imageUrl: '{{ asset("images/one-piece-luffy.gif") }}',
                            imageWidth: 100,
                            imageHeight: 100,
                            background: '#1c2526',
                            color: '#d1d5db',
                            confirmButtonColor: '#fe0369'
                        });
                    }
                });
            });

            $(document).on('click', '.share-link', function(e) {
                e.preventDefault();
                const $link = $(this);
                const topicId = $link.data('id');
                const platform = $link.hasClass('facebook-share') ? 'facebook' :
                                 $link.hasClass('twitter-share') ? 'twitter' :
                                 $link.hasClass('reddit-share') ? 'reddit' : null;

                if (!platform) return;

                $.ajax({
                    url: "{{ path('api_share_topic') }}",
                    method: 'GET',
                    data: { id: topicId },
                    success: function(response) {
                        if (response.success) {
                            const shareUrl = encodeURIComponent(response.url);
                            const title = response.title || '';
                            const content = response.content || '';
                            const shareText = encodeURIComponent(`${title}: \n${content}`);
                            let platformUrl;

                            switch (platform) {
                                case 'facebook':
                                    platformUrl = `https://www.facebook.com/sharer/sharer.php?u=${shareUrl}&quote=${shareText}`;
                                    break;
                                case 'twitter':
                                    platformUrl = `https://twitter.com/intent/tweet?url=${shareUrl}&text=${shareText}`;
                                    break;
                                case 'reddit':
                                    platformUrl = `https://www.reddit.com/submit?url=${shareUrl}&title=${shareText}`;
                                    break;
                            }

                            if (platformUrl) {
                                window.open(platformUrl, '_blank', 'width=600,height=400');
                            }
                        } else {
                            Swal.fire({
                                title: '{{ "forum.alert.error"|trans }}',
                                text: response.message || '{{ "forum.alert.share_error"|trans }}',
                                imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                                imageWidth: 100,
                                imageHeight: 100,
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#ff6f61'
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error fetching share data:', status, error);
                        Swal.fire({
                            title: '{{ "forum.alert.error"|trans }}',
                            text: '{{ "forum.alert.share_error"|trans }}',
                            imageUrl: '{{ asset("images/one-piece-luffy.gif") }}',
                            imageWidth: 100,
                            imageHeight: 100,
                            background: '#1c2526',
                            color: '#d1d5db',
                            confirmButtonColor: '#ff6f61'
                        });
                    }
                });
            });

            $(document).on('submit', '.profanity-check-form', function(e) {
                e.preventDefault();
                const $form = $(this);
                const title = $form.find('input[name*="[title]"]').val() || '';
                const content = $form.find('textarea[name*="[content]"]').val() || '';
                const combinedContent = title + ' ' + content;

                const $submitButton = $form.find('button[type="submit"]');
                $submitButton.prop('disabled', true);

                $.ajax({
                    url: "{{ path('api_check_profanity') }}",
                    method: 'POST',
                    data: { content: combinedContent },
                    success: function(response) {
                        if (response.isProfane) {
                            const profanityList = response.details ? response.details.map(m => m['text']).join(', ') : '';
                            Swal.fire({
                                title: '{{ "forum.inappropriate_content"|trans }}',
                                html: '{{ "forum.revise_content"|trans }}<br><strong>{{ "forum.detected"|trans }}:</strong> ' + (profanityList || 'N/A'),
                                imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                                imageWidth: 100,
                                imageHeight: 100,
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#fe0369'
                            }).then(() => {
                                $submitButton.prop('disabled', false);
                            });
                        } else {
                            $form.off('submit');
                            $form[0].submit();
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Profanity check error:', error);
                        Swal.fire({
                            title: '{{ "forum.alert.error"|trans }}',
                            text: '{{ "forum.error_checking_profanity"|trans }}',
                            imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                            imageWidth: 100,
                            imageHeight: 100,
                            background: '#1c2526',
                            color: '#d1d5db',
                            confirmButtonColor: '#fe0369'
                        }).then(() => {
                            $submitButton.prop('disabled', false);
                        });
                    }
                });
            });

$(document).on('mouseenter', '.nk-forum-recommended-item', function() {
    const $video = $(this).find('video');
    if ($video.length) {
        $video[0].play();
    }
}).on('mouseleave', '.nk-forum-recommended-item', function() {
    const $video = $(this).find('video');
    if ($video.length) {
        $video[0].pause();
    }
});

            $(document).on('click', '.spam-btn', function(e) {
                e.preventDefault();
                const $btn = $(this);
                const id = $btn.data('id');
                const type = $btn.data('type');
                const userId = $btn.data('user-id');

                if (!userId || isNaN(userId) || parseInt(userId) <= 0) {
                    Swal.fire({
                        title: '{{ "forum.alert.error"|trans }}',
                        text: '{{ "forum.invalid_user_id"|trans }}',
                        imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                        imageWidth: 100,
                        imageHeight: 100,
                        background: '#1c2526',
                        color: '#d1d5db',
                        confirmButtonColor: '#ff6f61'
                    });
                    return;
                }

                let contentToReport = '';
                if (type === 'question') {
                    contentToReport = $(`.nk-forum-item[data-title="${$btn.closest('.nk-forum-item').data('title')}"] .nk-forum-content p`).text().trim();
                }

                const modalHtml = `
                    <div class="report-modal-backdrop"></div>
                    <div class="report-modal">
                        <h3>{{ "forum.report"|trans }}</h3>
                        <form id="report-form-${id}">
                            <input type="hidden" name="reporterId" value="{{ app.user ? app.user.id : '' }}">
                            <input type="hidden" name="reportedUserId" value="${userId}">
                            <input type="hidden" name="status" value="PENDING">
                            <select name="reason" required>
                                <option value="">{{ "forum.select_reason"|trans }}</option>
                                <option value="MINEUR_IMPLIQUE">{{ "forum.reason.minor_involved"|trans }}</option>
                                <option value="HARCELEMENT">{{ "forum.reason.harassment"|trans }}</option>
                                <option value="SUICIDE_AUTOMUTILATION">{{ "forum.reason.suicide_self_harm"|trans }}</option>
                                <option value="CONTENU_VIOLENT">{{ "forum.reason.violent_content"|trans }}</option>
                                <option value="VENTE_ARTICLES_RESTREINTS">{{ "forum.reason.restricted_items"|trans }}</option>
                                <option value="CONTENU_ADULTE">{{ "forum.reason.adult_content"|trans }}</option>
                                <option value="ARNAQUE_FAUSSE_INFORMATION">{{ "forum.reason.scam_false_info"|trans }}</option>
                                <option value="CONTENU_NON_DESIRE">{{ "forum.reason.unwanted_content"|trans }}</option>
                            </select>
                            <textarea name="evidence" placeholder="{{ "forum.additional_details"|trans }}" rows="4">${contentToReport}</textarea>
                            <div style="display: flex; gap: 10px;">
                                <button type="submit" class="submit-btn">{{ "general.ok"|trans }}</button>
                                <button type="button" class="cancel-btn">{{ "general.cancel"|trans }}</button>
                            </div>
                        </form>
                    </div>
                `;

                $('.report-modal, .report-modal-backdrop').remove();
                $('body').append(modalHtml);

                $(`#report-form-${id}`).on('submit', function(e) {
                    e.preventDefault();
                    const formData = $(this).serializeArray();
                    const data = {};
                    formData.forEach(item => data[item.name] = item.value);

                    console.log('Sending report data:', data);

                    $.ajax({
                        url: "{{ path('report_create') }}",
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        success: function(response) {
                            if (response.success) {
                                Swal.fire({
                                    title: '{{ "forum.alert.success"|trans }}',
                                    text: '{{ "forum.report_submitted"|trans }}',
                                    imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                                    imageWidth: 100,
                                    imageHeight: 100,
                                    background: '#1c2526',
                                    color: '#d1d5db',
                                    confirmButtonColor: '#0585e6'
                                });
                                $('.report-modal, .report-modal-backdrop').remove();
                            } else {
                                Swal.fire({
                                    title: '{{ "forum.alert.error"|trans }}',
                                    text: response.message || '{{ "forum.error_submitting_report"|trans }}',
                                    imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                                    imageWidth: 100,
                                    imageHeight: 100,
                                    background: '#1c2526',
                                    color: '#d1d5db',
                                    confirmButtonColor: '#ff6f61'
                                });
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error('AJAX error:', status, error, xhr.responseText);
                            Swal.fire({
                                title: '{{ "forum.alert.error"|trans }}',
                                text: '{{ "forum.error_submitting_report"|trans }}: ' + (xhr.responseJSON?.message || '{{ "general.server_error"|trans }}'),
                                imageUrl: "{{ asset('images/one-piece-luffy.gif') }}",
                                imageWidth: 100,
                                imageHeight: 100,
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#ff6f61'
                            });
                        }
                    });
                });

                $('.cancel-btn, .report-modal-backdrop').on('click', function() {
                    $('.report-modal, .report-modal-backdrop').remove();
                });
            });
        });
    </script>
{% endblock %}