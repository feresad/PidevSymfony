{% extends 'base.html.twig' %}

{% block title %}GoodGames | Main Game Discussions{% endblock %}

{% block body %}
    <div class="nk-gap-1"></div>
    <div class="container">
        <ul class="nk-breadcrumbs">
            <li><a href="{{ path('app_home') }}">Home</a></li>
            <li><span class="fa fa-angle-right"></span></li>
            <li><a href="{{ path('forum_index') }}">Forum</a></li>
            <li><span class="fa fa-angle-right"></span></li>
            <li><span>Main Game Discussions</span></li>
        </ul>
    </div>
    <div class="nk-gap-1"></div>

    <div class="container nk-forum-container">
        <div class="row mb-4 align-items-center">
            <div class="col-md-8">
                <div class="nk-forum-search">
                    <input type="text" id="topicSearch" class="form-control" placeholder="Search topics by game, author, title, or content...">
                </div>
            </div>
            <div class="col-md-4 text-end">
                <button type="button" class="nk-btn nk-btn-rounded nk-btn-color-white" data-bs-toggle="modal" data-bs-target="#newTopicModal">
                    New Topic
                </button>
            </div>
        </div>

        <div class="nk-forum-trending mb-3">
            <div class="nk-forum-trending-header">
                <img src="{{ asset('images/reddit-icon.png') }}" alt="Reddit" class="nk-forum-trending-icon">
                <span>Trending on r/gaming</span>
            </div>
            <ul class="nk-forum-trending-list">
                {% for post in trendingPosts %}
                    <li>
                        <a href="{{ post.url }}" target="_blank" class="nk-forum-trending-link">
                            - {{ post.title|length > 60 ? post.title|slice(0, 60) ~ '...' : post.title }}
                        </a>
                    </li>
                {% endfor %}
            </ul>
        </div>

        <div class="nk-forum">
            {% for topic in topics %}
                <div class="nk-forum-item {{ topic.locked ? 'nk-forum-locked' : '' }}" 
                     data-game="{{ topic.gameImage ? topic.gameImage|replace({'img/games/': ''}) : 'No game' }}" 
                     data-author="{{ topic.startedBy }}" 
                     data-title="{{ topic.title|lower }}" 
                     data-content="{{ topic.content ? topic.content|lower : '' }}">
                    <div class="nk-forum-vote-section">
                        <button class="vote-btn upvote-btn voting-button upvote" data-id="{{ topic.id }}" data-type="question" data-vote-type="UP" data-fallback="↑">
                            <img src="{{ asset('images/uppvote-emoji.png') }}" alt="Upvote" class="vote-icon">
                        </button>
                        <span class="vote-count">{{ topic.votes|default(0) }}</span>
                        <button class="vote-btn downvote-btn voting-button downvote" data-id="{{ topic.id }}" data-type="question" data-vote-type="DOWN" data-fallback="↓">
                            <img src="{{ asset('images/doownvote-emoji.png') }}" alt="Downvote" class="vote-icon">
                        </button>
                    </div>
                    <div class="nk-forum-title">
                        <h3><a href="{{ path('forum_single_topic', { id: topic.id }) }}">{{ topic.title }}</a></h3>
                        <div class="nk-forum-title-sub">
                            Started by <a href="#">{{ topic.startedBy }}</a> on {{ topic.startedOn }}
                        </div>
                        {% if topic.content is defined and topic.content %}
                            <div class="nk-forum-content mt-2">
                                <p>
                                    {{ topic.content|slice(0, 150) }}
                                    {% if topic.content|length > 150 %}...{% endif %}
                                </p>
                            </div>
                        {% endif %}
                        {% if topic.image is defined and topic.image %}
                            <div class="nk-forum-title-image mt-2">
                                <img src="http://localhost/img/games/{{ topic.image }}" alt="Topic Image" style="max-width: 100px;">
                            </div>
                        {% endif %}
                        {% if topic.video is defined and topic.video %}
                            <div class="nk-forum-title-video mt-2">
                                <video width="320" height="240" controls>
                                    <source src="http://localhost/img/games/{{ topic.video }}" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>
                            </div>
                        {% endif %}
                        <div class="nk-forum-reactions mt-2">
                            <div class="reaction-display" data-id="{{ topic.id }}" data-type="question">
                                {% for emoji, count in topic.reactionCounts|default([]) %}
                                    <span class="reaction-item" data-emoji="{{ emoji }}">{{ emoji }} {{ count }}</span>
                                {% endfor %}
                            </div>
                        </div>
                        <div class="nk-forum-actions mt-2">
                            <button type="button" class="nk-btn nk-btn-rounded nk-btn-color-main-1" data-bs-toggle="modal" data-bs-target="#updateTopicModal-{{ topic.id }}">
                                Update
                            </button>
                            <button type="button" class="nk-btn nk-btn-rounded nk-btn-color-danger" data-bs-toggle="modal" data-bs-target="#deleteTopicModal-{{ topic.id }}">
                                Delete
                            </button>
                            <span class="share-btn" data-id="{{ topic.id }}" data-bs-toggle="modal" data-bs-target="#shareModal-{{ topic.id }}">
                                <img src="{{ asset('images/share_icon.png') }}" alt="Share" class="share-icon">
                            </span>
                            <div class="reaction-wrapper">
                                <img src="{{ asset('images/meme_icon.png') }}" alt="React" class="reaction-icon" data-id="{{ topic.id }}" data-type="question">
                                <div class="emoji-picker" style="display: none;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="nk-forum-count">
                        {{ topic.postCount }} posts
                    </div>
                    <div class="nk-forum-activity">
                        {% if topic.gameImage is defined and topic.gameImage %}
                            <div class="nk-forum-game-image mb-2">
                                <img src="http://localhost/img/games/{{ topic.gameImage }}" alt="Game Image" class="game-image">
                            </div>
                        {% else %}
                            <div class="nk-forum-game-image mb-2">
                                <img src="{{ asset('assets/images/default-game.jpg') }}" alt="Default Game Image" class="game-image">
                            </div>
                        {% endif %}
                        <div class="nk-forum-activity-title" title="{{ topic.lastActivityUser }}">
                            Last by <a href="#">{{ topic.lastActivityUser }}</a>
                        </div>
                        <div class="nk-forum-activity-date">
                            {{ topic.lastActivityDate }}
                        </div>
                    </div>
                </div>

                <!-- Modals unchanged -->
                <div class="modal fade" id="shareModal-{{ topic.id }}" tabindex="-1" aria-labelledby="shareModalLabel-{{ topic.id }}" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="shareModalLabel-{{ topic.id }}">Share Topic</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p>Share this topic on your favorite platform:</p>
                                <div class="share-options">
                                    <a href="#" class="share-link facebook-share" data-id="{{ topic.id }}" target="_blank">
                                        <i class="fab fa-facebook-f"></i> Facebook
                                    </a>
                                    <a href="#" class="share-link reddit-share" data-id="{{ topic.id }}" target="_blank">
                                        <i class="fab fa-reddit-alien"></i> Reddit
                                    </a>
                                    <a href="#" class="share-link twitter-share" data-id="{{ topic.id }}" target="_blank">
                                        <i class="fab fa-twitter"></i> Twitter
                                    </a>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="updateTopicModal-{{ topic.id }}" tabindex="-1" aria-labelledby="updateTopicModalLabel-{{ topic.id }}" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="updateTopicModalLabel-{{ topic.id }}">Update Topic</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                {{ form_start(topic.updateForm, {'attr': {'class': 'profanity-check-form'}}) }}
                                    <div class="mb-3">
                                        {{ form_label(topic.updateForm.title, null, {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(topic.updateForm.title, {'attr': {'class': 'form-control'}}) }}
                                        {{ form_errors(topic.updateForm.title) }}
                                    </div>
                                    <div class="mb-3">
                                        {{ form_label(topic.updateForm.content, null, {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(topic.updateForm.content, {'attr': {'class': 'form-control'}}) }}
                                        {{ form_errors(topic.updateForm.content) }}
                                    </div>
                                    <div class="mb-3">
                                        {{ form_label(topic.updateForm.media_type, null, {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(topic.updateForm.media_type, {'attr': {'class': 'form-control'}}) }}
                                        {{ form_errors(topic.updateForm.media_type) }}
                                    </div>
                                    <div class="mb-3">
                                        {{ form_label(topic.updateForm.media_file, null, {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(topic.updateForm.media_file, {'attr': {'class': 'form-control-file'}}) }}
                                        {{ form_errors(topic.updateForm.media_file) }}
                                    </div>
                                    <div class="mb-3">
                                        {{ form_label(topic.updateForm.game_id, null, {'label_attr': {'class': 'form-label'}}) }}
                                        {{ form_widget(topic.updateForm.game_id, {'attr': {'class': 'form-control'}}) }}
                                        {{ form_errors(topic.updateForm.game_id) }}
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Emotes</label>
                                        <div class="emotes-options">
                                            <button type="button" class="btn btn-emote" onclick="addEmote('😊', 'update_topic_form_{{ topic.id }}_content')">😊</button>
                                            <button type="button" class="btn btn-emote" onclick="addEmote('😂', 'update_topic_form_{{ topic.id }}_content')">😂</button>
                                            <button type="button" class="btn btn-emote" onclick="addEmote('❤️', 'update_topic_form_{{ topic.id }}_content')">❤️</button>
                                            <button type="button" class="btn btn-emote" onclick="addEmote('👍', 'update_topic_form_{{ topic.id }}_content')">👍</button>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        {{ form_widget(topic.updateForm.submit, {'attr': {'class': 'btn btn-primary'}}) }}
                                    </div>
                                {{ form_end(topic.updateForm) }}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="deleteTopicModal-{{ topic.id }}" tabindex="-1" aria-labelledby="deleteTopicModalLabel-{{ topic.id }}" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deleteTopicModalLabel-{{ topic.id }}">Delete Topic</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete the topic "<strong>{{ topic.title }}</strong>"? This action cannot be undone.
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <a href="{{ path('forum_delete_topic', { id: topic.id }) }}" class="btn btn-danger">Delete</a>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>

        <div class="nk-gap-2"></div>

        <div class="row">
            <div class="col-md-12">
                <div class="nk-pagination nk-pagination-left">
                    <a href="#" class="nk-pagination-prev">
                        <span class="ion-ios-arrow-back"></span>
                    </a>
                    <nav>
                        <a class="nk-pagination-current" href="#">1</a>
                        <a href="#">2</a>
                        <a href="#">3</a>
                        <a href="#">4</a>
                        <span>...</span>
                        <a href="#">14</a>
                    </nav>
                    <a href="#" class="nk-pagination-next">
                        <span class="ion-ios-arrow-forward"></span>
                    </a>
                </div>
            </div>
        </div>

        <div class="modal fade" id="newTopicModal" tabindex="-1" aria-labelledby="newTopicModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="newTopicModalLabel">Create New Topic</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        {{ form_start(newTopicForm, {'attr': {'class': 'profanity-check-form'}}) }}
                            <div class="mb-3">
                                {{ form_label(newTopicForm.title, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.title, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.title) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.content, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.content, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.content) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.media_type, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.media_type, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.media_type) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.media_file, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.media_file, {'attr': {'class': 'form-control-file'}}) }}
                                {{ form_errors(newTopicForm.media_file) }}
                            </div>
                            <div class="mb-3">
                                {{ form_label(newTopicForm.game_id, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(newTopicForm.game_id, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(newTopicForm.game_id) }}
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Emotes</label>
                                <div class="emotes-options">
                                    <button type="button" class="btn btn-emote" onclick="addEmote('😊', 'topic_form_content')">😊</button>
                                    <button type="button" class="btn btn-emote" onclick="addEmote('😂', 'topic_form_content')">😂</button>
                                    <button type="button" class="btn btn-emote" onclick="addEmote('❤️', 'topic_form_content')">❤️</button>
                                    <button type="button" class="btn btn-emote" onclick="addEmote('👍', 'topic_form_content')">👍</button>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                {{ form_widget(newTopicForm.submit, {'attr': {'class': 'btn btn-primary'}}) }}
                            </div>
                        {{ form_end(newTopicForm) }}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="nk-gap-2"></div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/topics.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        function addEmote(emote, fieldId) {
            const contentField = document.querySelector('#' + fieldId);
            if (contentField) {
                contentField.value += emote;
            }
        }

        $(document).ready(function() {
            let emojiList = []; // Store emojis globally to avoid repeated fetches

            // Debounce function to limit frequent calls
            function debounce(func, wait) {
                let timeout;
                return function(...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            // Fetch emojis once on page load
            function loadEmojis() {
                return $.ajax({
                    url: 'https://emoji-api.com/emojis?access_key=22b221fd734cfd73f62238bc32fa072f636bc63b',
                    method: 'GET',
                    cache: true
                }).then(emojis => {
                    emojiList = emojis.slice(0, 20); // Limit to 20 emojis
                }).catch(() => {
                    console.error('Failed to load emojis');
                    emojiList = ['😊', '😂', '❤️', '👍', '😢']; // Fallback emojis
                });
            }

            // Fetch and display reactions
            function fetchReactions(id, type, $display) {
                $.ajax({
                    url: '{{ path('react_action') }}',
                    method: 'POST',
                    data: { id: id, type: type, action: 'fetch' },
                    success: function(response) {
                        if (response.success) {
                            updateReactionDisplay($display, response.reactionCounts || {});
                        } else {
                            console.error('Failed to fetch reactions:', response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX error fetching reactions:', status, error);
                    }
                });
            }

            // Update reaction display dynamically
            function updateReactionDisplay($display, reactionCounts) {
                let reactionHtml = '';
                for (const [emoji, count] of Object.entries(reactionCounts)) {
                    reactionHtml += `<span class="reaction-item" data-emoji="${emoji}">${emoji} ${count}</span>`;
                }
                $display.html(reactionHtml);
            }

            // Initialize reactions on page load
            function initializeReactions() {
                $('.reaction-display').each(function() {
                    const $display = $(this);
                    const id = $display.data('id');
                    const type = $display.data('type');
                    if ($display.children().length === 0) {
                        fetchReactions(id, type, $display);
                    }
                });
            }

            // Show emoji picker with preloaded emojis
            const showEmojiPicker = debounce(function($icon, $picker, id, type) {
                if (emojiList.length === 0) return;

                let pickerHtml = '<div class="emoji-picker-container">';
                emojiList.forEach(emoji => {
                    pickerHtml += `<span class="emoji-option" data-emoji="${emoji.character}" data-id="${id}" data-type="${type}">${emoji.character}</span>`;
                });
                pickerHtml += '</div>';
                $picker.html(pickerHtml).fadeIn(100);
            }, 200);

            // Load emojis and initialize
            loadEmojis().then(() => {
                initializeReactions();

                $(document).on('mouseenter', '.reaction-icon', function() {
                    const $icon = $(this);
                    const id = $icon.data('id');
                    const type = $icon.data('type');
                    const $picker = $icon.siblings('.emoji-picker');
                    showEmojiPicker($icon, $picker, id, type);
                });

                $(document).on('mouseleave', '.reaction-wrapper', function() {
                    const $picker = $(this).find('.emoji-picker');
                    $picker.fadeOut(100);
                });

                $(document).on('click', '.emoji-option', function() {
                    const $emoji = $(this);
                    const emoji = $emoji.data('emoji');
                    const id = $emoji.data('id');
                    const type = $emoji.data('type');
                    const $display = $emoji.closest('.nk-forum-item').find('.reaction-display');
                    const $picker = $emoji.closest('.emoji-picker');

                    $.ajax({
                        url: '{{ path('react_action') }}',
                        method: 'POST',
                        data: { id: id, type: type, emoji: emoji, action: 'react' },
                        success: function(response) {
                            if (response.success) {
                                updateReactionDisplay($display, response.reactionCounts);
                                $picker.fadeOut(100);
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: response.message,
                                    icon: 'error',
                                    background: '#1c2526',
                                    color: '#d1d5db',
                                    confirmButtonColor: '#ff6f61'
                                });
                            }
                        },
                        error: function() {
                            Swal.fire({
                                title: 'Error',
                                text: 'Failed to save reaction',
                                icon: 'error',
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#ff6f61'
                            });
                        }
                    });
                });
            });

            // Search functionality unchanged
            $('#topicSearch').on('input', function() {
                const searchTerm = $(this).val().toLowerCase().trim();
                $('.nk-forum-item').each(function() {
                    const $topic = $(this);
                    const game = $topic.data('game').toLowerCase();
                    const author = $topic.data('author').toLowerCase();
                    const title = $topic.data('title').toLowerCase();
                    const content = $topic.data('content').toLowerCase();

                    const matches = (
                        game.includes(searchTerm) ||
                        author.includes(searchTerm) ||
                        title.includes(searchTerm) ||
                        content.includes(searchTerm)
                    );

                    $topic.toggle(matches);
                });
            });

            // Voting unchanged
            $(document).on('click', '.vote-btn', function(e) {
                e.preventDefault();
                const $btn = $(this);
                const id = $btn.data('id');
                const type = $btn.data('type');
                const voteType = $btn.data('vote-type');
                const $voteSection = $btn.closest('.nk-forum-vote-section');
                const $voteCount = $voteSection.find('.vote-count');

                $.ajax({
                    url: '{{ path('ajax_vote_action') }}',
                    method: 'POST',
                    data: { id: id, type: type, vote_type: voteType },
                    success: function(response) {
                        if (response.success) {
                            $voteCount.text(response.votes);
                            $btn.addClass('voted');
                        } else {
                            Swal.fire({
                                title: 'Voting Error',
                                text: response.message,
                                icon: 'error',
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#ff6f61'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            title: 'Voting Error',
                            text: 'An error occurred while voting. Please try again.',
                            icon: 'error',
                            background: '#1c2526',
                            color: '#d1d5db',
                            confirmButtonColor: '#ff6f61'
                        });
                    }
                });
            });

            $(document).on('click', '.share-btn', function(e) {
                e.preventDefault();
            });

            // Profanity check unchanged
            $(document).on('submit', '.profanity-check-form', function(e) {
                e.preventDefault();
                const $form = $(this);
                const title = $form.find('input[name*="[title]"]').val() || '';
                const content = $form.find('textarea[name*="[content]"]').val() || '';
                const combinedContent = title + ' ' + content;

                const $submitButton = $form.find('button[type="submit"]');
                $submitButton.prop('disabled', true);

                $.ajax({
                    url: '{{ path('api_check_profanity') }}',
                    method: 'POST',
                    data: { content: combinedContent },
                    success: function(response) {
                        if (response.isProfane) {
                            const profanityList = response.details ? response.details.map(m => m['text']).join(', ') : '';
                            Swal.fire({
                                title: 'Inappropriate Content Detected',
                                html: 'Your topic contains inappropriate language. Please revise it.<br><strong>Detected:</strong> ' + (profanityList || 'N/A'),
                                icon: 'warning',
                                background: '#1c2526',
                                color: '#d1d5db',
                                confirmButtonColor: '#ff6f61'
                            }).then(() => {
                                $submitButton.prop('disabled', false);
                            });
                        } else {
                            $form.off('submit');
                            $form[0].submit();
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Profanity check error:', error);
                        Swal.fire({
                            title: 'Error',
                            text: 'Error checking profanity. Please try again.',
                            icon: 'error',
                            background: '#1c2526',
                            color: '#d1d5db',
                            confirmButtonColor: '#ff6f61'
                        }).then(() => {
                            $submitButton.prop('disabled', false);
                        });
                    }
                });
            });
        });
    </script>

    <style>
        .nk-gaming-swal { border: 2px solid #0585e6; box-shadow: 0 0 20px rgba(5, 133, 230, 0.5); font-family: 'Montserrat', sans-serif; }
        .nk-gaming-swal-title { color: #fff; text-transform: uppercase; letter-spacing: 1px; }
        .nk-gaming-swal-content { color: #d1d5db; }
        .swal2-confirm { transition: transform 0.2s ease; }
        .swal2-confirm:hover { transform: scale(1.05); }
        .nk-forum-reactions { display: flex; align-items: center; gap: 10px; }
        .reaction-display { display: flex; gap: 5px; }
        .reaction-item { background-color: #293139; padding: 4px 8px; border-radius: 3px; font-size: 1.5rem;line-height: 1; }
        .reaction-wrapper { position: relative; display: inline-flex; align-items: center; }
        .reaction-icon { width: 30px; height: 30px; cursor: pointer; transition: transform 0.3s ease; }
        .reaction-icon:hover { transform: scale(1.1); }
        .emoji-picker-container {
            position: absolute;
            top: 100%;
            left: 0;
            background-color: #232930;
            border: 1px solid #293139;
            padding: 10px;
            border-radius: 5px;
            z-index: 1000;
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 8px;
            max-width: 200px;
            max-height: 200px;
            overflow-y: auto;
        }
        .emoji-option { cursor: pointer; font-size: 1.2rem; padding: 4px; text-align: center; }
        .emoji-option:hover { background-color: #0585e6; border-radius: 3px; }
        .nk-forum-actions { display: flex; align-items: center; gap: 10px; }
    </style>
{% endblock %}