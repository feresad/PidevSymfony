{% extends 'base.html.twig' %}

{% block title %}Mes Réservations{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* General container styles */
        .nk-main {
            background: #14181c;
            min-height: 100vh;
            padding: 40px 0;
            position: relative;
        }

        /* Typography */
        .nk-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #fff;
            text-transform: uppercase;
            text-align: center;
            margin-bottom: 0.5rem;
            letter-spacing: 2px;
            text-shadow: 0 0 10px rgba(221, 22, 59, 0.5);
        }

        .nk-sub-title {
            font-size: 1.2rem;
            color: #a1a1a1;
            text-align: center;
            margin-bottom: 2rem;
            letter-spacing: 1px;
        }

        /* Card styles */
        .nk-session-card {
            background: rgba(0, 0, 0, 0.7);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            overflow: hidden;
            transition: all 0.3s ease;
            margin-bottom: 30px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            height: 100%;
            display: flex;
            flex-direction: column;
            position: relative;
        }

        .nk-session-card.expired {
            background: rgba(40, 40, 40, 0.7);
            border: 1px solid rgba(255, 0, 0, 0.2);
            opacity: 0.8;
        }

        .nk-session-card.expired::before {
            content: 'EXPIRÉ';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(-45deg);
            background: rgba(255, 0, 0, 0.8);
            color: white;
            padding: 10px 40px;
            font-weight: bold;
            font-size: 24px;
            z-index: 2;
            text-transform: uppercase;
            letter-spacing: 2px;
            box-shadow: 0 0 20px rgba(255, 0, 0, 0.3);
        }

        .nk-session-card.expired .nk-session-image img {
            filter: grayscale(100%);
        }

        .nk-session-card.expired .nk-session-content {
            color: #888;
        }

        .nk-session-card.expired .nk-session-title {
            color: #888;
        }

        .nk-session-card.expired .nk-session-price {
            color: #666;
        }

        .nk-session-card.expired .nk-session-details p {
            color: #666;
        }

        .nk-session-card.expired .nk-session-details p i {
            color: #666;
        }

        .nk-session-card:not(.expired):hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 35px rgba(221, 22, 59, 0.2);
            border-color: rgba(221, 22, 59, 0.3);
        }

        /* Image styles */
        .nk-session-image {
            position: relative;
            width: 100%;
            height: 220px;
            overflow: hidden;
        }

        .nk-session-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-top-left-radius: 20px;
            border-top-right-radius: 20px;
            transition: transform 0.5s ease;
        }
        
        .nk-session-card:hover .nk-session-image img {
            transform: scale(1.05);
        }

        .status-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            background: #ff3e3e;
            color: #fff;
            padding: 8px 15px;
            font-weight: bold;
            border-radius: 30px;
            font-size: 14px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            z-index: 2;
        }

        .placeholder-image {
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);
            color: #555;
            font-size: 18px;
            font-weight: 600;
        }

        /* Card content */
        .nk-session-content {
            padding: 25px;
            text-align: center;
            color: #fff;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }

        .nk-session-title {
            font-size: 24px;
            margin-bottom: 15px;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            display: inline-block;
            padding-bottom: 10px;
        }
        
        .nk-session-title:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 3px;
            background: linear-gradient(to right, transparent, #ff3e3e, transparent);
        }

        .nk-session-price {
            font-size: 22px;
            color: #ffc107;
            margin-bottom: 20px;
            font-weight: 700;
        }

        .nk-session-details {
            margin-bottom: 20px;
            flex-grow: 1;
        }

        .nk-session-details p {
            margin: 10px 0;
            font-size: 16px;
            color: #a1a1a1;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .nk-session-details p i {
            margin-right: 10px;
            color: #ff3e3e;
            width: 20px;
            text-align: center;
        }

        /* Buttons */
        .nk-btn-reactivate, .nk-btn-cancel {
            padding: 12px 25px;
            border: none;
            border-radius: 30px;
            color: white;
            font-weight: 600;
            transition: all 0.3s ease;
            margin: 0 8px;
            text-transform: uppercase;
            letter-spacing: 1px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .nk-btn-reactivate {
            background: linear-gradient(135deg, #28a745 0%, #218838 100%);
        }

        .nk-btn-reactivate:hover {
            background: linear-gradient(135deg, #218838 0%, #1e7e34 100%);
            transform: translateY(-3px);
            box-shadow: 0 6px 18px rgba(40, 167, 69, 0.3);
        }

        .nk-btn-cancel {
            background: linear-gradient(135deg, #ff3e3e 0%, #e02b2b 100%);
        }

        .nk-btn-cancel:hover {
            background: linear-gradient(135deg, #e02b2b 0%, #c82333 100%);
            transform: translateY(-3px);
            box-shadow: 0 6px 18px rgba(255, 62, 62, 0.3);
        }

        .nk-btn-outline {
            border: 2px solid #ccc;
            color: #fff;
            padding: 12px 30px;
            border-radius: 30px;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .nk-btn-outline:hover {
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            border-color: #ff3e3e;
            transform: translateY(-3px);
        }

        .nk-btn-outline i {
            margin-right: 10px;
        }

        /* Alerts */
        .alert {
            opacity: 0;
            transform: translateY(-20px);
            animation: fadeInDown 0.5s ease forwards;
            background: rgba(30, 37, 43, 0.9);
            border: none;
            color: #fff;
            border-radius: 8px;
            padding: 15px 20px;
            margin-bottom: 25px;
            font-size: 1rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .alert-success {
            background: rgba(40, 167, 69, 0.2);
            border-left: 5px solid #28a745;
        }

        .alert-danger {
            background: rgba(221, 22, 59, 0.2);
            border-left: 5px solid #ff3e3e;
        }

        .alert-info {
            background: rgba(23, 162, 184, 0.2);
            border-left: 5px solid #17a2b8;
            font-size: 1.1rem;
            padding: 20px;
        }

        /* Animations */
        @keyframes fadeInDown {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-in {
            animation: fadeInUp 0.6s ease forwards;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Card container */
        .reservation-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 30px;
            margin-top: 30px;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .reservation-grid {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 20px;
            }
            
            .nk-title {
                font-size: 2rem;
            }

            .nk-sub-title {
                font-size: 1rem;
            }

            .nk-session-image {
                height: 180px;
            }
            
            .nk-btn-reactivate, .nk-btn-cancel {
                padding: 10px 20px;
                font-size: 14px;
                margin: 5px;
            }
        }

        @media (max-width: 576px) {
            .reservation-grid {
                grid-template-columns: 1fr;
            }
            
            .nk-title {
                font-size: 1.8rem;
            }

            .nk-session-image {
                height: 200px;
            }
        }

        /* Payment Success Notification */
        .payment-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(40, 167, 69, 0.9);
            color: white;
            padding: 15px 25px;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            transform: translateX(120%);
            transition: transform 0.3s ease-in-out;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .payment-notification.show {
            transform: translateX(0);
        }

        .payment-notification i {
            font-size: 20px;
        }
    </style>
{% endblock %}

{% block body %}
<div class="nk-main">
    <div class="container">
        <div class="nk-gap-2"></div>
        <h2 class="nk-title animate-title">Mes Réservations</h2>
        <p class="nk-sub-title animate-subtitle">Historique de vos réservations de coaching</p>

        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label == 'success' ? 'success' : 'danger' }} text-center animate-flash" role="alert">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}

        <div class="reservation-grid">
            {% for reservation in reservations %}
                {% set isExpired = reservation.dateReservation|date('Y-m-d') < 'now'|date('Y-m-d') %}
                <div class="nk-session-card animate-card {% if isExpired %}expired{% endif %}">
                    {% if reservation.session.imageName %}
                        <div class="nk-session-image">
                            <img src="{{ image_base_url ~ reservation.session.imageName }}" alt="{{ reservation.session.game }}">
                            {% if reservation.status is defined %}
                                <div class="status-badge">{{ reservation.status }}</div>
                            {% endif %}
                        </div>
                    {% else %}
                        <div class="nk-session-image placeholder-image">
                            <span class="placeholder-text">Aucune image</span>
                        </div>
                    {% endif %}

                    <div class="nk-session-content">
                        <h3 class="nk-session-title">{{ reservation.session.game }}</h3>
                        <div class="nk-session-price">{{ reservation.session.prix }} DT</div>
                        <div class="nk-session-details">
                            <p><i class="fas fa-clock"></i> Durée : {{ reservation.session.dureeSession }} min</p>
                            <p><i class="fas fa-user"></i> Coach : {{ reservation.session.coach.nom }} {{ reservation.session.coach.prenom }}</p>
                            <p><i class="fas fa-calendar"></i> Date : {{ reservation.dateReservation|date('d/m/Y') }}</p>
                        </div>

                        {% if not isExpired %}
                            <div class="text-center mt-3">
                                <a href="{{ path('reservation_cancel', {'id': reservation.id}) }}" 
                                   class="nk-btn nk-btn-cancel">
                                    <i class="fas fa-times"></i> Annuler
                                </a>
                                <a href="#" 
                                   class="nk-btn nk-btn-reactivate"
                                   onclick="initiatePayment({{ reservation.id }}, {{ reservation.session.prix }})">
                                    <i class="fas fa-credit-card"></i> Payer
                                </a>
                            </div>
                        {% endif %}
                    </div>
                </div>
            {% else %}
                <div class="col-12">
                    <div class="alert alert-info text-center animate-flash">
                        <i class="fas fa-info-circle fa-lg mr-2"></i> Vous n'avez pas encore de réservations.
                    </div>
                </div>
            {% endfor %}
        </div>

        <div class="text-center mt-5">
            <a href="{{ path('session_client_list') }}" class="nk-btn nk-btn-outline nk-btn-rounded">
                <i class="fas fa-arrow-left"></i> Retour aux sessions
            </a>
        </div>

        <div class="nk-gap-2"></div>
    </div>

    {% include 'payment/stripe_form.html.twig' %}

    <img class="nk-page-background-top" src="{{ asset('images/bg-top.png') }}" alt="Background Top">
    <img class="nk-page-background-bottom" src="{{ asset('images/bg-bottom.png') }}" alt="Background Bottom">
</div>

<div class="payment-notification" id="paymentNotification">
    <i class="fas fa-check-circle"></i>
    <span>Paiement réussi !</span>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const stripe = Stripe('{{ stripe_public_key }}');
        const elements = stripe.elements();

        // Animation des éléments
        const elementsToAnimate = document.querySelectorAll('.animate-title, .animate-subtitle, .animate-card, .animate-flash');
        elementsToAnimate.forEach((el, index) => {
            setTimeout(() => {
                el.classList.add('animate-in');
            }, index * 200);
        });

        function showPaymentNotification() {
            const notification = document.getElementById('paymentNotification');
            notification.classList.add('show');
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    window.location.reload();
                }, 300);
            }, 2000);
        }

        window.initiatePayment = function(reservationId, amount) {
            console.log('Initiating payment for reservation ID:', reservationId, 'Amount:', amount);
            
            document.getElementById('reservation-id').value = reservationId;
            document.getElementById('amount').value = amount;
            
            const modal = document.getElementById('paymentModal');
            bootstrap.Modal.getOrCreateInstance(modal).show();

            const cardElement = elements.create('card', {
                style: {
                    base: {
                        color: '#ffffff',
                        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                        fontSmoothing: 'antialiased',
                        fontSize: '16px',
                        '::placeholder': { color: '#aab7c4' }
                    },
                    invalid: {
                        color: '#fa755a',
                        iconColor: '#fa755a'
                    }
                }
            });

            cardElement.mount('#card-element');

            cardElement.addEventListener('change', function(event) {
                const displayError = document.getElementById('card-errors');
                displayError.textContent = event.error ? event.error.message : '';
            });

            const form = document.getElementById('payment-form');
            form.addEventListener('submit', async function(event) {
                event.preventDefault();

                document.querySelector('#button-text').style.display = 'none';
                document.querySelector('#spinner').classList.remove('d-none');

                const {token, error} = await stripe.createToken(cardElement);

                if (error) {
                    document.getElementById('card-errors').textContent = error.message;
                    document.querySelector('#button-text').style.display = 'block';
                    document.querySelector('#spinner').classList.add('d-none');
                    return;
                }

                const response = await fetch('{{ path('payment_process') }}', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        token: token.id,
                        reservation_id: reservationId,
                        amount: amount
                    })
                });

                const result = await response.json();

                document.querySelector('#button-text').style.display = 'block';
                document.querySelector('#spinner').classList.add('d-none');

                if (result.success) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('paymentModal'));
                    modal.hide();
                    showPaymentNotification();
                } else {
                    document.getElementById('card-errors').textContent = result.error;
                }
            });
        };
    });
    </script>
{% endblock %}