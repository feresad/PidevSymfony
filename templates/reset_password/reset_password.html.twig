{% extends 'base.html.twig' %}

{% block title %}Réinitialisation du mot de passe{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/reset-password.css') }}">
{% endblock %}

{% block body %}
<div class="container">
    <div class="reset-password-container">
        <h1>Réinitialiser le mot de passe</h1>

        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
        {% endfor %}

        {{ form_start(resetForm) }}
            <div class="form-group">
                {{ form_label(resetForm.plainPassword.first, 'Nouveau mot de passe', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(resetForm.plainPassword.first, {
                    'attr': {
                        'class': 'form-control password-input',
                        'autocomplete': 'new-password',
                        'placeholder': 'Entrez votre nouveau mot de passe'
                    }
                }) }}
                {{ form_errors(resetForm.plainPassword.first) }}
                <div class="password-requirements">
                    Le mot de passe doit contenir :
                    <ul>
                        <li>Au moins 8 caractères</li>
                        <li>Au moins une lettre majuscule</li>
                        <li>Au moins une lettre minuscule</li>
                        <li>Au moins un chiffre</li>
                        <li>Au moins un caractère spécial (@$!%*#?&)</li>
                    </ul>
                </div>
                <div class="password-strength"></div>
            </div>

            <div class="form-group">
                {{ form_label(resetForm.plainPassword.second, 'Confirmer le mot de passe', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(resetForm.plainPassword.second, {
                    'attr': {
                        'class': 'form-control password-input',
                        'autocomplete': 'new-password',
                        'placeholder': 'Confirmez votre mot de passe'
                    }
                }) }}
                {{ form_errors(resetForm.plainPassword.second) }}
            </div>

            {{ form_widget(resetForm.submit, {
                'attr': {
                    'class': 'btn btn-primary'
                }
            }) }}
        {{ form_end(resetForm) }}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.querySelector('#{{ resetForm.plainPassword.first.vars.id }}');
            const confirmInput = document.querySelector('#{{ resetForm.plainPassword.second.vars.id }}');
            const strengthIndicator = document.querySelector('.password-strength');
            
            function checkPasswordStrength(password) {
                let strength = 0;
                if (password.length >= 8) strength++;
                if (password.match(/[A-Z]/)) strength++;
                if (password.match(/[a-z]/)) strength++;
                if (password.match(/[0-9]/)) strength++;
                if (password.match(/[@$!%*#?&]/)) strength++;
                
                return strength;
            }
            
            passwordInput.addEventListener('input', function() {
                const strength = checkPasswordStrength(this.value);
                strengthIndicator.className = 'password-strength';
                
                if (strength >= 5) {
                    strengthIndicator.classList.add('strength-strong');
                } else if (strength >= 3) {
                    strengthIndicator.classList.add('strength-medium');
                } else if (strength > 0) {
                    strengthIndicator.classList.add('strength-weak');
                }
            });

            // Clear any success messages that might be present
            const successMessages = document.querySelectorAll('.alert-success');
            successMessages.forEach(message => {
                setTimeout(() => {
                    message.remove();
                }, 5000); // Remove after 5 seconds
            });
        });
    </script>
{% endblock %}
