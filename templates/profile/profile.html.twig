{% extends 'base.html.twig' %}

{% block title %}Mon Profil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/profile.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <style>
        body {
            background-image: url('{{ image_base_url ~ "HeimerdingerRev.jpg"}}');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .profile-container {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .profile-box {
            background: rgba(0, 0, 0, 0.85);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            position: relative;
            overflow: hidden;
        }

        .profile-box::before {
            content: '';
            position: absolute;
            top: -1px;
            left: -1px;
            right: -1px;
            bottom: -1px;
            background: linear-gradient(135deg, #007bff, #ff69b4);
            border-radius: 21px;
            z-index: -1;
            opacity: 0.5;
        }

        .profile-box h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 2rem;
            color: #007bff;
            text-align: center;
        }

        .profile-content {
            display: flex;
            gap: 2rem;
            flex-wrap: wrap;
        }

        .profile-left {
            flex: 1;
            min-width: 300px;
            text-align: center;
        }

        .profile-right {
            flex: 2;
            min-width: 300px;
        }

        .profile-image-container {
            position: relative;
            width: 200px;
            height: 200px;
            margin: 0 auto 20px;
            border-radius: 50%;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
            border: 3px solid #007bff;
            transition: transform 0.3s ease;
        }

        .profile-image-container:hover {
            transform: scale(1.05);
            border-color: #ff69b4;
        }

        .profile-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .btn-modify-photo {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: #007bff;
            color: white;
            padding: 10px;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .btn-modify-photo:hover {
            background: #ff69b4;
            padding: 12px;
        }

        .profile-nickname {
            font-size: 1.8rem;
            font-weight: 600;
            color: #007bff;
            margin: 1rem 0;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .form-group {
            margin-bottom: 1.5rem;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 0.5s ease forwards;
        }

        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .form-group:nth-child(1) { animation-delay: 0.1s; }
        .form-group:nth-child(2) { animation-delay: 0.2s; }
        .form-group:nth-child(3) { animation-delay: 0.3s; }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #007bff;
            font-size: 1.1rem;
        }

        .form-control {
            display: block;
            width: 100%;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            line-height: 1.5;
            color: white;
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid #007bff;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            background-color: rgba(255, 255, 255, 0.15);
            border-color: #ff69b4;
            box-shadow: 0 0 0 0.25rem rgba(255, 105, 180, 0.25);
            color: white;
        }

        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .error-message {
            color: #ff69b4;
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }

        .btn-modify {
            background: #007bff;
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
        }

        .btn-modify:hover {
            background: #ff69b4;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 105, 180, 0.4);
        }

        .password-section {
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid #007bff;
        }

        .password-section h3 {
            font-size: 1.5rem;
            font-weight: 600;
            color: #007bff;
            margin-bottom: 1.5rem;
        }

        .alert {
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            border: none;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .alert-success {
            background: rgba(0, 123, 255, 0.2);
            color: #007bff;
            border-left: 4px solid #007bff;
        }

        .alert-danger {
            background: rgba(255, 105, 180, 0.2);
            color: #ff69b4;
            border-left: 4px solid #ff69b4;
        }

        /* Modal styling */
        .modal-content {
            background: rgba(0, 0, 0, 0.9);
            border: 1px solid #007bff;
            border-radius: 15px;
            color: white;
        }

        .modal-header {
            border-bottom: 1px solid #007bff;
        }

        .modal-footer {
            border-top: 1px solid #007bff;
        }

        .btn-secondary {
            background: #007bff;
            border: none;
            color: white;
        }

        .btn-secondary:hover {
            background: #ff69b4;
        }

        @media (max-width: 768px) {
            .profile-content {
                flex-direction: column;
            }
            
            .profile-left, .profile-right {
                flex: none;
                width: 100%;
            }
        }
    </style>
{% endblock %}

{% block body %}
<div class="profile-container">
    <div class="profile-box">
        <h1>Mon Profil</h1>

        {% for message in app.flashes('success') %}
            <div class="alert alert-success">
                {{ message }}
            </div>
        {% endfor %}

        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">
                {{ message }}
            </div>
        {% endfor %}

        <div class="profile-content">
            <div class="profile-left">
                <div class="profile-image-container">
                    <img src="{{ image_base_url }}{% if user.photo %}{{ user.photo }}{% else %}default-avatar.jpg{% endif %}" alt="Profile Image" id="profileImage" class="profile-image">
                    <button type="button" class="btn-modify-photo" id="uploadTrigger">
                        <i class="fas fa-camera"></i> Modifier la photo
                    </button>
                    <input type="file" id="imageUpload" accept="image/*" style="display: none;">
                </div>
                <h2 class="profile-nickname">{{ user.nickname }}</h2>
            </div>

            <div class="profile-right">
                {{ form_start(profileForm, {'attr': {'class': 'profile-form'}}) }}
                    <div class="form-group">
                        {{ form_label(profileForm.prenom) }}
                        {{ form_widget(profileForm.prenom) }}
                        <div class="error-message">
                            {{ form_errors(profileForm.prenom) }}
                        </div>
                    </div>

                    <div class="form-group">
                        {{ form_label(profileForm.nom) }}
                        {{ form_widget(profileForm.nom) }}
                        <div class="error-message">
                            {{ form_errors(profileForm.nom) }}
                        </div>
                    </div>

                    <div class="form-group">
                        {{ form_label(profileForm.nickname) }}
                        {{ form_widget(profileForm.nickname) }}
                        <div class="error-message">
                            {{ form_errors(profileForm.nickname) }}
                        </div>
                    </div>

                    <button type="submit" class="btn-modify">Modifier</button>
                {{ form_end(profileForm) }}

                <div class="password-section">
                    <h3>Changer le mot de passe</h3>
                    {{ form_start(passwordForm, {'attr': {'class': 'password-form'}}) }}
                        <div class="form-group">
                            {{ form_label(passwordForm.currentPassword) }}
                            {{ form_widget(passwordForm.currentPassword) }}
                            <div class="error-message">
                                {{ form_errors(passwordForm.currentPassword) }}
                            </div>
                        </div>

                        <div class="form-group">
                            {{ form_label(passwordForm.newPassword) }}
                            {{ form_widget(passwordForm.newPassword) }}
                            <div class="error-message">
                                {{ form_errors(passwordForm.newPassword) }}
                            </div>
                        </div>

                        <button type="submit" class="btn-modify">Modifier le mot de passe</button>
                    {{ form_end(passwordForm) }}
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Image Cropper Modal -->
<div class="modal fade" id="imageCropperModal" tabindex="-1" role="dialog" aria-labelledby="imageCropperModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageCropperModalLabel">Recadrer l'image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <img id="imageToCrop" src="" alt="Image à recadrer">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" id="cropImage">Recadrer</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const uploadTrigger = document.getElementById('uploadTrigger');
            const imageUpload = document.getElementById('imageUpload');
            const profileImage = document.getElementById('profileImage');
            const imageToCrop = document.getElementById('imageToCrop');
            const cropperModal = new bootstrap.Modal(document.getElementById('imageCropperModal'));
            let cropper;

            uploadTrigger.addEventListener('click', () => {
                imageUpload.click();
            });

            imageUpload.addEventListener('change', (e) => {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        imageToCrop.src = e.target.result;
                        cropperModal.show();
                    };
                    reader.readAsDataURL(file);
                }
            });

            imageToCrop.addEventListener('load', () => {
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper(imageToCrop, {
                    aspectRatio: 1,
                    viewMode: 1,
                    dragMode: 'move',
                    autoCropArea: 1,
                    restore: false,
                    modal: true,
                    guides: true,
                    highlight: false,
                    cropBoxMovable: true,
                    cropBoxResizable: true,
                    toggleDragModeOnDblclick: false,
                });
            });

            document.getElementById('cropImage').addEventListener('click', () => {
                const canvas = cropper.getCroppedCanvas({
                    width: 300,
                    height: 300
                });

                canvas.toBlob((blob) => {
                    const formData = new FormData();
                    formData.append('image', canvas.toDataURL('image/png'));

                    fetch('{{ path("app_profile_upload_image") }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            image: canvas.toDataURL('image/png')
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            profileImage.src = data.image_url; // Utiliser image_url de la réponse JSON
                            cropperModal.hide();
                            // Show success message
                            const successAlert = document.createElement('div');
                            successAlert.className = 'alert alert-success';
                            successAlert.textContent = 'Image mise à jour avec succès!';
                            document.querySelector('.profile-box').insertBefore(successAlert, document.querySelector('.profile-content'));
                            // Supprimer le rechargement de la page
                        } else {
                            console.error('Upload error:', data.message);
                            const errorAlert = document.createElement('div');
                            errorAlert.className = 'alert alert-danger';
                            errorAlert.textContent = data.message || 'Erreur lors du téléchargement de l\'image';
                            document.querySelector('.profile-box').insertBefore(errorAlert, document.querySelector('.profile-content'));
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        const errorAlert = document.createElement('div');
                        errorAlert.className = 'alert alert-danger';
                        errorAlert.textContent = 'Erreur lors du téléchargement de l\'image';
                        document.querySelector('.profile-box').insertBefore(errorAlert, document.querySelector('.profile-content'));
                    });
                }, 'image/png');
            });
        });
    </script>
{% endblock %}